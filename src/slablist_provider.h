/*
 * Generated by dtrace(1M).
 */

#ifndef	_SLABLIST_PROVIDER_H
#define	_SLABLIST_PROVIDER_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#if _DTRACE_VERSION

#define	SLABLIST_ADD_AFTER(arg0, arg1, arg2) \
	__dtrace_slablist___add_after(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_AFTER_ENABLED() \
	__dtraceenabled_slablist___add_after()
#else
#define	SLABLIST_ADD_AFTER_ENABLED() \
	__dtraceenabled_slablist___add_after(0)
#endif
#define	SLABLIST_ADD_AFTER_MK(arg0, arg1, arg2) \
	__dtrace_slablist___add_after_mk(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_AFTER_MK_ENABLED() \
	__dtraceenabled_slablist___add_after_mk()
#else
#define	SLABLIST_ADD_AFTER_MK_ENABLED() \
	__dtraceenabled_slablist___add_after_mk(0)
#endif
#define	SLABLIST_ADD_BEFORE(arg0, arg1, arg2) \
	__dtrace_slablist___add_before(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_BEFORE_ENABLED() \
	__dtraceenabled_slablist___add_before()
#else
#define	SLABLIST_ADD_BEFORE_ENABLED() \
	__dtraceenabled_slablist___add_before(0)
#endif
#define	SLABLIST_ADD_BEFORE_MK(arg0, arg1, arg2) \
	__dtrace_slablist___add_before_mk(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_BEFORE_MK_ENABLED() \
	__dtraceenabled_slablist___add_before_mk()
#else
#define	SLABLIST_ADD_BEFORE_MK_ENABLED() \
	__dtraceenabled_slablist___add_before_mk(0)
#endif
#define	SLABLIST_ADD_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___add_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_BEGIN_ENABLED() \
	__dtraceenabled_slablist___add_begin()
#else
#define	SLABLIST_ADD_BEGIN_ENABLED() \
	__dtraceenabled_slablist___add_begin(0)
#endif
#define	SLABLIST_ADD_END(arg0) \
	__dtrace_slablist___add_end(arg0)
#ifndef	__sparc
#define	SLABLIST_ADD_END_ENABLED() \
	__dtraceenabled_slablist___add_end()
#else
#define	SLABLIST_ADD_END_ENABLED() \
	__dtraceenabled_slablist___add_end(0)
#endif
#define	SLABLIST_ADD_HEAD(arg0) \
	__dtrace_slablist___add_head(arg0)
#ifndef	__sparc
#define	SLABLIST_ADD_HEAD_ENABLED() \
	__dtraceenabled_slablist___add_head()
#else
#define	SLABLIST_ADD_HEAD_ENABLED() \
	__dtraceenabled_slablist___add_head(0)
#endif
#define	SLABLIST_ADD_INTO(arg0, arg1, arg2) \
	__dtrace_slablist___add_into(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_INTO_ENABLED() \
	__dtraceenabled_slablist___add_into()
#else
#define	SLABLIST_ADD_INTO_ENABLED() \
	__dtraceenabled_slablist___add_into(0)
#endif
#define	SLABLIST_ADD_INTO_SPILL_NEXT(arg0, arg1, arg2) \
	__dtrace_slablist___add_into_spill_next(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_INTO_SPILL_NEXT_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_next()
#else
#define	SLABLIST_ADD_INTO_SPILL_NEXT_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_next(0)
#endif
#define	SLABLIST_ADD_INTO_SPILL_NEXT_MK(arg0, arg1, arg2) \
	__dtrace_slablist___add_into_spill_next_mk(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_INTO_SPILL_NEXT_MK_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_next_mk()
#else
#define	SLABLIST_ADD_INTO_SPILL_NEXT_MK_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_next_mk(0)
#endif
#define	SLABLIST_ADD_INTO_SPILL_PREV(arg0, arg1, arg2) \
	__dtrace_slablist___add_into_spill_prev(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_INTO_SPILL_PREV_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_prev()
#else
#define	SLABLIST_ADD_INTO_SPILL_PREV_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_prev(0)
#endif
#define	SLABLIST_ADD_INTO_SPILL_PREV_MK(arg0, arg1, arg2) \
	__dtrace_slablist___add_into_spill_prev_mk(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_INTO_SPILL_PREV_MK_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_prev_mk()
#else
#define	SLABLIST_ADD_INTO_SPILL_PREV_MK_ENABLED() \
	__dtraceenabled_slablist___add_into_spill_prev_mk(0)
#endif
#define	SLABLIST_ADD_REPLACE(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___add_replace(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_ADD_REPLACE_ENABLED() \
	__dtraceenabled_slablist___add_replace()
#else
#define	SLABLIST_ADD_REPLACE_ENABLED() \
	__dtraceenabled_slablist___add_replace(0)
#endif
#define	SLABLIST_ATTACH_SUBLAYER(arg0, arg1) \
	__dtrace_slablist___attach_sublayer(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_ATTACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___attach_sublayer()
#else
#define	SLABLIST_ATTACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___attach_sublayer(0)
#endif
#define	SLABLIST_BIN_SEARCH(arg0, arg1, arg2) \
	__dtrace_slablist___bin_search(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_BIN_SEARCH_ENABLED() \
	__dtraceenabled_slablist___bin_search()
#else
#define	SLABLIST_BIN_SEARCH_ENABLED() \
	__dtraceenabled_slablist___bin_search(0)
#endif
#define	SLABLIST_BIN_SEARCH_LOOP(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___bin_search_loop(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_BIN_SEARCH_LOOP_ENABLED() \
	__dtraceenabled_slablist___bin_search_loop()
#else
#define	SLABLIST_BIN_SEARCH_LOOP_ENABLED() \
	__dtraceenabled_slablist___bin_search_loop(0)
#endif
#define	SLABLIST_BUBBLE_UP(arg0, arg1) \
	__dtrace_slablist___bubble_up(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___bubble_up()
#else
#define	SLABLIST_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___bubble_up(0)
#endif
#define	SLABLIST_BUBBLE_UP_BEGIN(arg0) \
	__dtrace_slablist___bubble_up_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bubble_up_begin()
#else
#define	SLABLIST_BUBBLE_UP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bubble_up_begin(0)
#endif
#define	SLABLIST_BUBBLE_UP_END(arg0) \
	__dtrace_slablist___bubble_up_end(arg0)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_END_ENABLED() \
	__dtraceenabled_slablist___bubble_up_end()
#else
#define	SLABLIST_BUBBLE_UP_END_ENABLED() \
	__dtraceenabled_slablist___bubble_up_end(0)
#endif
#define	SLABLIST_BWDSHIFT_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___bwdshift_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_BWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bwdshift_begin()
#else
#define	SLABLIST_BWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bwdshift_begin(0)
#endif
#define	SLABLIST_BWDSHIFT_END() \
	__dtrace_slablist___bwdshift_end()
#ifndef	__sparc
#define	SLABLIST_BWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___bwdshift_end()
#else
#define	SLABLIST_BWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___bwdshift_end(0)
#endif
#define	SLABLIST_CREATE(arg0) \
	__dtrace_slablist___create(arg0)
#ifndef	__sparc
#define	SLABLIST_CREATE_ENABLED() \
	__dtraceenabled_slablist___create()
#else
#define	SLABLIST_CREATE_ENABLED() \
	__dtraceenabled_slablist___create(0)
#endif
#define	SLABLIST_DESTROY(arg0) \
	__dtrace_slablist___destroy(arg0)
#ifndef	__sparc
#define	SLABLIST_DESTROY_ENABLED() \
	__dtraceenabled_slablist___destroy()
#else
#define	SLABLIST_DESTROY_ENABLED() \
	__dtraceenabled_slablist___destroy(0)
#endif
#define	SLABLIST_DETACH_SUBLAYER(arg0, arg1) \
	__dtrace_slablist___detach_sublayer(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_DETACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___detach_sublayer()
#else
#define	SLABLIST_DETACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___detach_sublayer(0)
#endif
#define	SLABLIST_FIND_BEGIN(arg0, arg1) \
	__dtrace_slablist___find_begin(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_FIND_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_begin()
#else
#define	SLABLIST_FIND_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_begin(0)
#endif
#define	SLABLIST_FIND_END(arg0, arg1) \
	__dtrace_slablist___find_end(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_FIND_END_ENABLED() \
	__dtraceenabled_slablist___find_end()
#else
#define	SLABLIST_FIND_END_ENABLED() \
	__dtraceenabled_slablist___find_end(0)
#endif
#define	SLABLIST_FIND_SLAB_POS_BEGIN(arg0) \
	__dtrace_slablist___find_slab_pos_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_FIND_SLAB_POS_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_begin()
#else
#define	SLABLIST_FIND_SLAB_POS_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_begin(0)
#endif
#define	SLABLIST_FIND_SLAB_POS_END(arg0) \
	__dtrace_slablist___find_slab_pos_end(arg0)
#ifndef	__sparc
#define	SLABLIST_FIND_SLAB_POS_END_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_end()
#else
#define	SLABLIST_FIND_SLAB_POS_END_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_end(0)
#endif
#define	SLABLIST_FWDSHIFT_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___fwdshift_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_FWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___fwdshift_begin()
#else
#define	SLABLIST_FWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___fwdshift_begin(0)
#endif
#define	SLABLIST_FWDSHIFT_END() \
	__dtrace_slablist___fwdshift_end()
#ifndef	__sparc
#define	SLABLIST_FWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___fwdshift_end()
#else
#define	SLABLIST_FWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___fwdshift_end(0)
#endif
#define	SLABLIST_GET_RAND(arg0, arg1) \
	__dtrace_slablist___get_rand(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_GET_RAND_ENABLED() \
	__dtraceenabled_slablist___get_rand()
#else
#define	SLABLIST_GET_RAND_ENABLED() \
	__dtraceenabled_slablist___get_rand(0)
#endif
#define	SLABLIST_GOT_HERE(arg0) \
	__dtrace_slablist___got_here(arg0)
#ifndef	__sparc
#define	SLABLIST_GOT_HERE_ENABLED() \
	__dtraceenabled_slablist___got_here()
#else
#define	SLABLIST_GOT_HERE_ENABLED() \
	__dtraceenabled_slablist___got_here(0)
#endif
#define	SLABLIST_LINEAR_SCAN(arg0, arg1) \
	__dtrace_slablist___linear_scan(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_LINEAR_SCAN_ENABLED() \
	__dtraceenabled_slablist___linear_scan()
#else
#define	SLABLIST_LINEAR_SCAN_ENABLED() \
	__dtraceenabled_slablist___linear_scan(0)
#endif
#define	SLABLIST_LINEAR_SCAN_BEGIN(arg0) \
	__dtrace_slablist___linear_scan_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_LINEAR_SCAN_BEGIN_ENABLED() \
	__dtraceenabled_slablist___linear_scan_begin()
#else
#define	SLABLIST_LINEAR_SCAN_BEGIN_ENABLED() \
	__dtraceenabled_slablist___linear_scan_begin(0)
#endif
#define	SLABLIST_LINEAR_SCAN_END(arg0) \
	__dtrace_slablist___linear_scan_end(arg0)
#ifndef	__sparc
#define	SLABLIST_LINEAR_SCAN_END_ENABLED() \
	__dtraceenabled_slablist___linear_scan_end()
#else
#define	SLABLIST_LINEAR_SCAN_END_ENABLED() \
	__dtraceenabled_slablist___linear_scan_end(0)
#endif
#define	SLABLIST_LINK_SLAB_AFTER(arg0, arg1, arg2) \
	__dtrace_slablist___link_slab_after(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_LINK_SLAB_AFTER_ENABLED() \
	__dtraceenabled_slablist___link_slab_after()
#else
#define	SLABLIST_LINK_SLAB_AFTER_ENABLED() \
	__dtraceenabled_slablist___link_slab_after(0)
#endif
#define	SLABLIST_LINK_SLAB_BEFORE(arg0, arg1, arg2) \
	__dtrace_slablist___link_slab_before(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_LINK_SLAB_BEFORE_ENABLED() \
	__dtraceenabled_slablist___link_slab_before()
#else
#define	SLABLIST_LINK_SLAB_BEFORE_ENABLED() \
	__dtraceenabled_slablist___link_slab_before(0)
#endif
#define	SLABLIST_LINK_SML_NODE(arg0) \
	__dtrace_slablist___link_sml_node(arg0)
#ifndef	__sparc
#define	SLABLIST_LINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___link_sml_node()
#else
#define	SLABLIST_LINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___link_sml_node(0)
#endif
#define	SLABLIST_MOVE_MID_TO_NEXT(arg0, arg1, arg2) \
	__dtrace_slablist___move_mid_to_next(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_MOVE_MID_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___move_mid_to_next()
#else
#define	SLABLIST_MOVE_MID_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___move_mid_to_next(0)
#endif
#define	SLABLIST_MOVE_MID_TO_PREV(arg0, arg1, arg2) \
	__dtrace_slablist___move_mid_to_prev(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_MOVE_MID_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___move_mid_to_prev()
#else
#define	SLABLIST_MOVE_MID_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___move_mid_to_prev(0)
#endif
#define	SLABLIST_MOVE_NEXT_TO_MID(arg0, arg1, arg2) \
	__dtrace_slablist___move_next_to_mid(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_MOVE_NEXT_TO_MID_ENABLED() \
	__dtraceenabled_slablist___move_next_to_mid()
#else
#define	SLABLIST_MOVE_NEXT_TO_MID_ENABLED() \
	__dtraceenabled_slablist___move_next_to_mid(0)
#endif
#define	SLABLIST_MOVE_NEXT_TO_PREV(arg0, arg1, arg2) \
	__dtrace_slablist___move_next_to_prev(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_MOVE_NEXT_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___move_next_to_prev()
#else
#define	SLABLIST_MOVE_NEXT_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___move_next_to_prev(0)
#endif
#define	SLABLIST_MOVE_PREV_TO_MID(arg0, arg1, arg2) \
	__dtrace_slablist___move_prev_to_mid(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_MOVE_PREV_TO_MID_ENABLED() \
	__dtraceenabled_slablist___move_prev_to_mid()
#else
#define	SLABLIST_MOVE_PREV_TO_MID_ENABLED() \
	__dtraceenabled_slablist___move_prev_to_mid(0)
#endif
#define	SLABLIST_MOVE_PREV_TO_NEXT(arg0, arg1, arg2) \
	__dtrace_slablist___move_prev_to_next(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_MOVE_PREV_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___move_prev_to_next()
#else
#define	SLABLIST_MOVE_PREV_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___move_prev_to_next(0)
#endif
#define	SLABLIST_REAP_BEGIN(arg0) \
	__dtrace_slablist___reap_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_REAP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___reap_begin()
#else
#define	SLABLIST_REAP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___reap_begin(0)
#endif
#define	SLABLIST_REAP_END(arg0) \
	__dtrace_slablist___reap_end(arg0)
#ifndef	__sparc
#define	SLABLIST_REAP_END_ENABLED() \
	__dtraceenabled_slablist___reap_end()
#else
#define	SLABLIST_REAP_END_ENABLED() \
	__dtraceenabled_slablist___reap_end(0)
#endif
#define	SLABLIST_REM_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___rem_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_REM_BEGIN_ENABLED() \
	__dtraceenabled_slablist___rem_begin()
#else
#define	SLABLIST_REM_BEGIN_ENABLED() \
	__dtraceenabled_slablist___rem_begin(0)
#endif
#define	SLABLIST_REM_END(arg0) \
	__dtrace_slablist___rem_end(arg0)
#ifndef	__sparc
#define	SLABLIST_REM_END_ENABLED() \
	__dtraceenabled_slablist___rem_end()
#else
#define	SLABLIST_REM_END_ENABLED() \
	__dtraceenabled_slablist___rem_end(0)
#endif
#define	SLABLIST_REM_HEAD(arg0) \
	__dtrace_slablist___rem_head(arg0)
#ifndef	__sparc
#define	SLABLIST_REM_HEAD_ENABLED() \
	__dtraceenabled_slablist___rem_head()
#else
#define	SLABLIST_REM_HEAD_ENABLED() \
	__dtraceenabled_slablist___rem_head(0)
#endif
#define	SLABLIST_RIPPLE_ADD_SLAB(arg0, arg1, arg2) \
	__dtrace_slablist___ripple_add_slab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_RIPPLE_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_add_slab()
#else
#define	SLABLIST_RIPPLE_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_add_slab(0)
#endif
#define	SLABLIST_RIPPLE_REM_SLAB(arg0, arg1, arg2) \
	__dtrace_slablist___ripple_rem_slab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_RIPPLE_REM_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_rem_slab()
#else
#define	SLABLIST_RIPPLE_REM_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_rem_slab(0)
#endif
#define	SLABLIST_SET_CRUMB(arg0, arg1, arg2) \
	__dtrace_slablist___set_crumb(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SET_CRUMB_ENABLED() \
	__dtraceenabled_slablist___set_crumb()
#else
#define	SLABLIST_SET_CRUMB_ENABLED() \
	__dtraceenabled_slablist___set_crumb(0)
#endif
#define	SLABLIST_SL_DEC_ELEMS(arg0) \
	__dtrace_slablist___sl_dec_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_elems()
#else
#define	SLABLIST_SL_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_elems(0)
#endif
#define	SLABLIST_SL_DEC_SLABS(arg0) \
	__dtrace_slablist___sl_dec_slabs(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_DEC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_slabs()
#else
#define	SLABLIST_SL_DEC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_slabs(0)
#endif
#define	SLABLIST_SL_INC_ELEMS(arg0) \
	__dtrace_slablist___sl_inc_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_elems()
#else
#define	SLABLIST_SL_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_elems(0)
#endif
#define	SLABLIST_SL_INC_LAYER(arg0) \
	__dtrace_slablist___sl_inc_layer(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_LAYER_ENABLED() \
	__dtraceenabled_slablist___sl_inc_layer()
#else
#define	SLABLIST_SL_INC_LAYER_ENABLED() \
	__dtraceenabled_slablist___sl_inc_layer(0)
#endif
#define	SLABLIST_SL_INC_SLABS(arg0) \
	__dtrace_slablist___sl_inc_slabs(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_slabs()
#else
#define	SLABLIST_SL_INC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_slabs(0)
#endif
#define	SLABLIST_SL_INC_SUBLAYERS(arg0) \
	__dtrace_slablist___sl_inc_sublayers(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_SUBLAYERS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_sublayers()
#else
#define	SLABLIST_SL_INC_SUBLAYERS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_sublayers(0)
#endif
#define	SLABLIST_SLAB_BIN_SRCH(arg0, arg1) \
	__dtrace_slablist___slab_bin_srch(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___slab_bin_srch()
#else
#define	SLABLIST_SLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___slab_bin_srch(0)
#endif
#define	SLABLIST_SLAB_DEC_ELEMS(arg0) \
	__dtrace_slablist___slab_dec_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_dec_elems()
#else
#define	SLABLIST_SLAB_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_dec_elems(0)
#endif
#define	SLABLIST_SLAB_INC_ELEMS(arg0) \
	__dtrace_slablist___slab_inc_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_inc_elems()
#else
#define	SLABLIST_SLAB_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_inc_elems(0)
#endif
#define	SLABLIST_SLAB_MK(arg0) \
	__dtrace_slablist___slab_mk(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_MK_ENABLED() \
	__dtraceenabled_slablist___slab_mk()
#else
#define	SLABLIST_SLAB_MK_ENABLED() \
	__dtraceenabled_slablist___slab_mk(0)
#endif
#define	SLABLIST_SLAB_RM(arg0) \
	__dtrace_slablist___slab_rm(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_RM_ENABLED() \
	__dtraceenabled_slablist___slab_rm()
#else
#define	SLABLIST_SLAB_RM_ENABLED() \
	__dtraceenabled_slablist___slab_rm(0)
#endif
#define	SLABLIST_SLAB_SET_MAX(arg0) \
	__dtrace_slablist___slab_set_max(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_SET_MAX_ENABLED() \
	__dtraceenabled_slablist___slab_set_max()
#else
#define	SLABLIST_SLAB_SET_MAX_ENABLED() \
	__dtraceenabled_slablist___slab_set_max(0)
#endif
#define	SLABLIST_SLAB_SET_MIN(arg0) \
	__dtrace_slablist___slab_set_min(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_SET_MIN_ENABLED() \
	__dtraceenabled_slablist___slab_set_min()
#else
#define	SLABLIST_SLAB_SET_MIN_ENABLED() \
	__dtraceenabled_slablist___slab_set_min(0)
#endif
#define	SLABLIST_SUBSLAB_BIN_SRCH(arg0, arg1) \
	__dtrace_slablist___subslab_bin_srch(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___subslab_bin_srch()
#else
#define	SLABLIST_SUBSLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___subslab_bin_srch(0)
#endif
#define	SLABLIST_TEST() \
	__dtrace_slablist___test()
#ifndef	__sparc
#define	SLABLIST_TEST_ENABLED() \
	__dtraceenabled_slablist___test()
#else
#define	SLABLIST_TEST_ENABLED() \
	__dtraceenabled_slablist___test(0)
#endif
#define	SLABLIST_TEST_BREAD_CRUMBS(arg0, arg1) \
	__dtrace_slablist___test_bread_crumbs(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_BREAD_CRUMBS_ENABLED() \
	__dtraceenabled_slablist___test_bread_crumbs()
#else
#define	SLABLIST_TEST_BREAD_CRUMBS_ENABLED() \
	__dtraceenabled_slablist___test_bread_crumbs(0)
#endif
#define	SLABLIST_TEST_BUBBLE_UP(arg0, arg1) \
	__dtrace_slablist___test_bubble_up(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___test_bubble_up()
#else
#define	SLABLIST_TEST_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___test_bubble_up(0)
#endif
#define	SLABLIST_TEST_IS_SLAB_LIST(arg0) \
	__dtrace_slablist___test_is_slab_list(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_IS_SLAB_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_slab_list()
#else
#define	SLABLIST_TEST_IS_SLAB_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_slab_list(0)
#endif
#define	SLABLIST_TEST_IS_SML_LIST(arg0) \
	__dtrace_slablist___test_is_sml_list(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_IS_SML_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_sml_list()
#else
#define	SLABLIST_TEST_IS_SML_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_sml_list(0)
#endif
#define	SLABLIST_TEST_MOVE_NEXT(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___test_move_next(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_TEST_MOVE_NEXT_ENABLED() \
	__dtraceenabled_slablist___test_move_next()
#else
#define	SLABLIST_TEST_MOVE_NEXT_ENABLED() \
	__dtraceenabled_slablist___test_move_next(0)
#endif
#define	SLABLIST_TEST_MOVE_PREV(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___test_move_prev(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_TEST_MOVE_PREV_ENABLED() \
	__dtraceenabled_slablist___test_move_prev()
#else
#define	SLABLIST_TEST_MOVE_PREV_ENABLED() \
	__dtraceenabled_slablist___test_move_prev(0)
#endif
#define	SLABLIST_TEST_NELEMS(arg0, arg1, arg2) \
	__dtrace_slablist___test_nelems(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_nelems()
#else
#define	SLABLIST_TEST_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_nelems(0)
#endif
#define	SLABLIST_TEST_NSLABS(arg0, arg1, arg2) \
	__dtrace_slablist___test_nslabs(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_NSLABS_ENABLED() \
	__dtraceenabled_slablist___test_nslabs()
#else
#define	SLABLIST_TEST_NSLABS_ENABLED() \
	__dtraceenabled_slablist___test_nslabs(0)
#endif
#define	SLABLIST_TEST_NULLARG(arg0, arg1) \
	__dtrace_slablist___test_nullarg(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_NULLARG_ENABLED() \
	__dtraceenabled_slablist___test_nullarg()
#else
#define	SLABLIST_TEST_NULLARG_ENABLED() \
	__dtraceenabled_slablist___test_nullarg(0)
#endif
#define	SLABLIST_TEST_SLAB_BKPTR(arg0) \
	__dtrace_slablist___test_slab_bkptr(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_BKPTR_ENABLED() \
	__dtraceenabled_slablist___test_slab_bkptr()
#else
#define	SLABLIST_TEST_SLAB_BKPTR_ENABLED() \
	__dtraceenabled_slablist___test_slab_bkptr(0)
#endif
#define	SLABLIST_TEST_SLAB_ELEMS_MAX(arg0, arg1) \
	__dtrace_slablist___test_slab_elems_max(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_ELEMS_MAX_ENABLED() \
	__dtraceenabled_slablist___test_slab_elems_max()
#else
#define	SLABLIST_TEST_SLAB_ELEMS_MAX_ENABLED() \
	__dtraceenabled_slablist___test_slab_elems_max(0)
#endif
#define	SLABLIST_TEST_SLAB_ELEMS_SORTED(arg0) \
	__dtrace_slablist___test_slab_elems_sorted(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_slab_elems_sorted()
#else
#define	SLABLIST_TEST_SLAB_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_slab_elems_sorted(0)
#endif
#define	SLABLIST_TEST_SLAB_EXTREMA(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___test_slab_extrema(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_EXTREMA_ENABLED() \
	__dtraceenabled_slablist___test_slab_extrema()
#else
#define	SLABLIST_TEST_SLAB_EXTREMA_ENABLED() \
	__dtraceenabled_slablist___test_slab_extrema(0)
#endif
#define	SLABLIST_TEST_SLAB_SUBLAYER(arg0) \
	__dtrace_slablist___test_slab_sublayer(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___test_slab_sublayer()
#else
#define	SLABLIST_TEST_SLAB_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___test_slab_sublayer(0)
#endif
#define	SLABLIST_TEST_SLAB_TO_SML(arg0) \
	__dtrace_slablist___test_slab_to_sml(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_TO_SML_ENABLED() \
	__dtraceenabled_slablist___test_slab_to_sml()
#else
#define	SLABLIST_TEST_SLAB_TO_SML_ENABLED() \
	__dtraceenabled_slablist___test_slab_to_sml(0)
#endif
#define	SLABLIST_TEST_SLABS_SORTED(arg0, arg1, arg2) \
	__dtrace_slablist___test_slabs_sorted(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_SLABS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_slabs_sorted()
#else
#define	SLABLIST_TEST_SLABS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_slabs_sorted(0)
#endif
#define	SLABLIST_TEST_SLIST_USAGE_RATIO(arg0) \
	__dtrace_slablist___test_slist_usage_ratio(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SLIST_USAGE_RATIO_ENABLED() \
	__dtraceenabled_slablist___test_slist_usage_ratio()
#else
#define	SLABLIST_TEST_SLIST_USAGE_RATIO_ENABLED() \
	__dtraceenabled_slablist___test_slist_usage_ratio(0)
#endif
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED(arg0) \
	__dtrace_slablist___test_smlist_elems_sorted(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_smlist_elems_sorted()
#else
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_smlist_elems_sorted(0)
#endif
#define	SLABLIST_TEST_SMLIST_NELEMS(arg0) \
	__dtrace_slablist___test_smlist_nelems(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SMLIST_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_smlist_nelems()
#else
#define	SLABLIST_TEST_SMLIST_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_smlist_nelems(0)
#endif
#define	SLABLIST_TEST_SUBLAYER_ELEMS_SORTED(arg0, arg1) \
	__dtrace_slablist___test_sublayer_elems_sorted(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBLAYER_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_sublayer_elems_sorted()
#else
#define	SLABLIST_TEST_SUBLAYER_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_sublayer_elems_sorted(0)
#endif
#define	SLABLIST_TEST_SUBLAYER_EXTREMA(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_slablist___test_sublayer_extrema(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBLAYER_EXTREMA_ENABLED() \
	__dtraceenabled_slablist___test_sublayer_extrema()
#else
#define	SLABLIST_TEST_SUBLAYER_EXTREMA_ENABLED() \
	__dtraceenabled_slablist___test_sublayer_extrema(0)
#endif
#define	SLABLIST_TEST_SUBLAYER_NELEMS(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___test_sublayer_nelems(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBLAYER_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_sublayer_nelems()
#else
#define	SLABLIST_TEST_SUBLAYER_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_sublayer_nelems(0)
#endif
#define	SLABLIST_TEST_SUBLAYERS_HAVE_ALL_SLABS(arg0, arg1) \
	__dtrace_slablist___test_sublayers_have_all_slabs(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBLAYERS_HAVE_ALL_SLABS_ENABLED() \
	__dtraceenabled_slablist___test_sublayers_have_all_slabs()
#else
#define	SLABLIST_TEST_SUBLAYERS_HAVE_ALL_SLABS_ENABLED() \
	__dtraceenabled_slablist___test_sublayers_have_all_slabs(0)
#endif
#define	SLABLIST_TEST_SUBLAYERS_SORTED(arg0, arg1) \
	__dtrace_slablist___test_sublayers_sorted(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBLAYERS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_sublayers_sorted()
#else
#define	SLABLIST_TEST_SUBLAYERS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_sublayers_sorted(0)
#endif
#define	SLABLIST_TO_SLAB(arg0) \
	__dtrace_slablist___to_slab(arg0)
#ifndef	__sparc
#define	SLABLIST_TO_SLAB_ENABLED() \
	__dtraceenabled_slablist___to_slab()
#else
#define	SLABLIST_TO_SLAB_ENABLED() \
	__dtraceenabled_slablist___to_slab(0)
#endif
#define	SLABLIST_TO_SMALL_LIST(arg0) \
	__dtrace_slablist___to_small_list(arg0)
#ifndef	__sparc
#define	SLABLIST_TO_SMALL_LIST_ENABLED() \
	__dtraceenabled_slablist___to_small_list()
#else
#define	SLABLIST_TO_SMALL_LIST_ENABLED() \
	__dtraceenabled_slablist___to_small_list(0)
#endif
#define	SLABLIST_UNLINK_SLAB(arg0, arg1) \
	__dtrace_slablist___unlink_slab(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_UNLINK_SLAB_ENABLED() \
	__dtraceenabled_slablist___unlink_slab()
#else
#define	SLABLIST_UNLINK_SLAB_ENABLED() \
	__dtraceenabled_slablist___unlink_slab(0)
#endif
#define	SLABLIST_UNLINK_SML_NODE(arg0) \
	__dtrace_slablist___unlink_sml_node(arg0)
#ifndef	__sparc
#define	SLABLIST_UNLINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___unlink_sml_node()
#else
#define	SLABLIST_UNLINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___unlink_sml_node(0)
#endif


extern void __dtrace_slablist___add_after(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_after(void);
#else
extern int __dtraceenabled_slablist___add_after(long);
#endif
extern void __dtrace_slablist___add_after_mk(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_after_mk(void);
#else
extern int __dtraceenabled_slablist___add_after_mk(long);
#endif
extern void __dtrace_slablist___add_before(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_before(void);
#else
extern int __dtraceenabled_slablist___add_before(long);
#endif
extern void __dtrace_slablist___add_before_mk(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_before_mk(void);
#else
extern int __dtraceenabled_slablist___add_before_mk(long);
#endif
extern void __dtrace_slablist___add_begin(slablist_t *, uintptr_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_begin(void);
#else
extern int __dtraceenabled_slablist___add_begin(long);
#endif
extern void __dtrace_slablist___add_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_end(void);
#else
extern int __dtraceenabled_slablist___add_end(long);
#endif
extern void __dtrace_slablist___add_head(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_head(void);
#else
extern int __dtraceenabled_slablist___add_head(long);
#endif
extern void __dtrace_slablist___add_into(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_into(void);
#else
extern int __dtraceenabled_slablist___add_into(long);
#endif
extern void __dtrace_slablist___add_into_spill_next(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_into_spill_next(void);
#else
extern int __dtraceenabled_slablist___add_into_spill_next(long);
#endif
extern void __dtrace_slablist___add_into_spill_next_mk(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_into_spill_next_mk(void);
#else
extern int __dtraceenabled_slablist___add_into_spill_next_mk(long);
#endif
extern void __dtrace_slablist___add_into_spill_prev(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_into_spill_prev(void);
#else
extern int __dtraceenabled_slablist___add_into_spill_prev(long);
#endif
extern void __dtrace_slablist___add_into_spill_prev_mk(slablist_t *, slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_into_spill_prev_mk(void);
#else
extern int __dtraceenabled_slablist___add_into_spill_prev_mk(long);
#endif
extern void __dtrace_slablist___add_replace(slablist_t *, slab_t *, uintptr_t, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_replace(void);
#else
extern int __dtraceenabled_slablist___add_replace(long);
#endif
extern void __dtrace_slablist___attach_sublayer(slablist_t *, slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___attach_sublayer(void);
#else
extern int __dtraceenabled_slablist___attach_sublayer(long);
#endif
extern void __dtrace_slablist___bin_search(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bin_search(void);
#else
extern int __dtraceenabled_slablist___bin_search(long);
#endif
extern void __dtrace_slablist___bin_search_loop(int, int, int, int, int, void *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bin_search_loop(void);
#else
extern int __dtraceenabled_slablist___bin_search_loop(long);
#endif
extern void __dtrace_slablist___bubble_up(slablist_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up(void);
#else
extern int __dtraceenabled_slablist___bubble_up(long);
#endif
extern void __dtrace_slablist___bubble_up_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up_begin(void);
#else
extern int __dtraceenabled_slablist___bubble_up_begin(long);
#endif
extern void __dtrace_slablist___bubble_up_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up_end(void);
#else
extern int __dtraceenabled_slablist___bubble_up_end(long);
#endif
extern void __dtrace_slablist___bwdshift_begin(slablist_t *, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bwdshift_begin(void);
#else
extern int __dtraceenabled_slablist___bwdshift_begin(long);
#endif
extern void __dtrace_slablist___bwdshift_end(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bwdshift_end(void);
#else
extern int __dtraceenabled_slablist___bwdshift_end(long);
#endif
extern void __dtrace_slablist___create(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___create(void);
#else
extern int __dtraceenabled_slablist___create(long);
#endif
extern void __dtrace_slablist___destroy(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___destroy(void);
#else
extern int __dtraceenabled_slablist___destroy(long);
#endif
extern void __dtrace_slablist___detach_sublayer(slablist_t *, slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___detach_sublayer(void);
#else
extern int __dtraceenabled_slablist___detach_sublayer(long);
#endif
extern void __dtrace_slablist___find_begin(slablist_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_begin(void);
#else
extern int __dtraceenabled_slablist___find_begin(long);
#endif
extern void __dtrace_slablist___find_end(int, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_end(void);
#else
extern int __dtraceenabled_slablist___find_end(long);
#endif
extern void __dtrace_slablist___find_slab_pos_begin(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_slab_pos_begin(void);
#else
extern int __dtraceenabled_slablist___find_slab_pos_begin(long);
#endif
extern void __dtrace_slablist___find_slab_pos_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_slab_pos_end(void);
#else
extern int __dtraceenabled_slablist___find_slab_pos_end(long);
#endif
extern void __dtrace_slablist___fwdshift_begin(slablist_t *, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___fwdshift_begin(void);
#else
extern int __dtraceenabled_slablist___fwdshift_begin(long);
#endif
extern void __dtrace_slablist___fwdshift_end(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___fwdshift_end(void);
#else
extern int __dtraceenabled_slablist___fwdshift_end(long);
#endif
extern void __dtrace_slablist___get_rand(slablist_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_rand(void);
#else
extern int __dtraceenabled_slablist___get_rand(long);
#endif
extern void __dtrace_slablist___got_here(uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___got_here(void);
#else
extern int __dtraceenabled_slablist___got_here(long);
#endif
extern void __dtrace_slablist___linear_scan(slablist_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___linear_scan(void);
#else
extern int __dtraceenabled_slablist___linear_scan(long);
#endif
extern void __dtrace_slablist___linear_scan_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___linear_scan_begin(void);
#else
extern int __dtraceenabled_slablist___linear_scan_begin(long);
#endif
extern void __dtrace_slablist___linear_scan_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___linear_scan_end(void);
#else
extern int __dtraceenabled_slablist___linear_scan_end(long);
#endif
extern void __dtrace_slablist___link_slab_after(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_slab_after(void);
#else
extern int __dtraceenabled_slablist___link_slab_after(long);
#endif
extern void __dtrace_slablist___link_slab_before(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_slab_before(void);
#else
extern int __dtraceenabled_slablist___link_slab_before(long);
#endif
extern void __dtrace_slablist___link_sml_node(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_sml_node(void);
#else
extern int __dtraceenabled_slablist___link_sml_node(long);
#endif
extern void __dtrace_slablist___move_mid_to_next(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___move_mid_to_next(void);
#else
extern int __dtraceenabled_slablist___move_mid_to_next(long);
#endif
extern void __dtrace_slablist___move_mid_to_prev(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___move_mid_to_prev(void);
#else
extern int __dtraceenabled_slablist___move_mid_to_prev(long);
#endif
extern void __dtrace_slablist___move_next_to_mid(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___move_next_to_mid(void);
#else
extern int __dtraceenabled_slablist___move_next_to_mid(long);
#endif
extern void __dtrace_slablist___move_next_to_prev(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___move_next_to_prev(void);
#else
extern int __dtraceenabled_slablist___move_next_to_prev(long);
#endif
extern void __dtrace_slablist___move_prev_to_mid(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___move_prev_to_mid(void);
#else
extern int __dtraceenabled_slablist___move_prev_to_mid(long);
#endif
extern void __dtrace_slablist___move_prev_to_next(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___move_prev_to_next(void);
#else
extern int __dtraceenabled_slablist___move_prev_to_next(long);
#endif
extern void __dtrace_slablist___reap_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___reap_begin(void);
#else
extern int __dtraceenabled_slablist___reap_begin(long);
#endif
extern void __dtrace_slablist___reap_end(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___reap_end(void);
#else
extern int __dtraceenabled_slablist___reap_end(long);
#endif
extern void __dtrace_slablist___rem_begin(slablist_t *, uintptr_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_begin(void);
#else
extern int __dtraceenabled_slablist___rem_begin(long);
#endif
extern void __dtrace_slablist___rem_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_end(void);
#else
extern int __dtraceenabled_slablist___rem_end(long);
#endif
extern void __dtrace_slablist___rem_head(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_head(void);
#else
extern int __dtraceenabled_slablist___rem_head(long);
#endif
extern void __dtrace_slablist___ripple_add_slab(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___ripple_add_slab(void);
#else
extern int __dtraceenabled_slablist___ripple_add_slab(long);
#endif
extern void __dtrace_slablist___ripple_rem_slab(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___ripple_rem_slab(void);
#else
extern int __dtraceenabled_slablist___ripple_rem_slab(long);
#endif
extern void __dtrace_slablist___set_crumb(slablist_t *, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___set_crumb(void);
#else
extern int __dtraceenabled_slablist___set_crumb(long);
#endif
extern void __dtrace_slablist___sl_dec_elems(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_dec_elems(void);
#else
extern int __dtraceenabled_slablist___sl_dec_elems(long);
#endif
extern void __dtrace_slablist___sl_dec_slabs(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_dec_slabs(void);
#else
extern int __dtraceenabled_slablist___sl_dec_slabs(long);
#endif
extern void __dtrace_slablist___sl_inc_elems(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_elems(void);
#else
extern int __dtraceenabled_slablist___sl_inc_elems(long);
#endif
extern void __dtrace_slablist___sl_inc_layer(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_layer(void);
#else
extern int __dtraceenabled_slablist___sl_inc_layer(long);
#endif
extern void __dtrace_slablist___sl_inc_slabs(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_slabs(void);
#else
extern int __dtraceenabled_slablist___sl_inc_slabs(long);
#endif
extern void __dtrace_slablist___sl_inc_sublayers(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_sublayers(void);
#else
extern int __dtraceenabled_slablist___sl_inc_sublayers(long);
#endif
extern void __dtrace_slablist___slab_bin_srch(slab_t *, uintptr_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_bin_srch(void);
#else
extern int __dtraceenabled_slablist___slab_bin_srch(long);
#endif
extern void __dtrace_slablist___slab_dec_elems(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_dec_elems(void);
#else
extern int __dtraceenabled_slablist___slab_dec_elems(long);
#endif
extern void __dtrace_slablist___slab_inc_elems(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_inc_elems(void);
#else
extern int __dtraceenabled_slablist___slab_inc_elems(long);
#endif
extern void __dtrace_slablist___slab_mk(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_mk(void);
#else
extern int __dtraceenabled_slablist___slab_mk(long);
#endif
extern void __dtrace_slablist___slab_rm(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_rm(void);
#else
extern int __dtraceenabled_slablist___slab_rm(long);
#endif
extern void __dtrace_slablist___slab_set_max(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_set_max(void);
#else
extern int __dtraceenabled_slablist___slab_set_max(long);
#endif
extern void __dtrace_slablist___slab_set_min(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_set_min(void);
#else
extern int __dtraceenabled_slablist___slab_set_min(long);
#endif
extern void __dtrace_slablist___subslab_bin_srch(slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_bin_srch(void);
#else
extern int __dtraceenabled_slablist___subslab_bin_srch(long);
#endif
extern void __dtrace_slablist___test(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test(void);
#else
extern int __dtraceenabled_slablist___test(long);
#endif
extern void __dtrace_slablist___test_bread_crumbs(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_bread_crumbs(void);
#else
extern int __dtraceenabled_slablist___test_bread_crumbs(long);
#endif
extern void __dtrace_slablist___test_bubble_up(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_bubble_up(void);
#else
extern int __dtraceenabled_slablist___test_bubble_up(long);
#endif
extern void __dtrace_slablist___test_is_slab_list(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_is_slab_list(void);
#else
extern int __dtraceenabled_slablist___test_is_slab_list(long);
#endif
extern void __dtrace_slablist___test_is_sml_list(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_is_sml_list(void);
#else
extern int __dtraceenabled_slablist___test_is_sml_list(long);
#endif
extern void __dtrace_slablist___test_move_next(int, slab_t *, slab_t *, slab_t *, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_move_next(void);
#else
extern int __dtraceenabled_slablist___test_move_next(long);
#endif
extern void __dtrace_slablist___test_move_prev(int, slab_t *, slab_t *, slab_t *, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_move_prev(void);
#else
extern int __dtraceenabled_slablist___test_move_prev(long);
#endif
extern void __dtrace_slablist___test_nelems(int, uint64_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_nelems(void);
#else
extern int __dtraceenabled_slablist___test_nelems(long);
#endif
extern void __dtrace_slablist___test_nslabs(int, uint64_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_nslabs(void);
#else
extern int __dtraceenabled_slablist___test_nslabs(long);
#endif
extern void __dtrace_slablist___test_nullarg(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_nullarg(void);
#else
extern int __dtraceenabled_slablist___test_nullarg(long);
#endif
extern void __dtrace_slablist___test_slab_bkptr(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_bkptr(void);
#else
extern int __dtraceenabled_slablist___test_slab_bkptr(long);
#endif
extern void __dtrace_slablist___test_slab_elems_max(int, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_elems_max(void);
#else
extern int __dtraceenabled_slablist___test_slab_elems_max(long);
#endif
extern void __dtrace_slablist___test_slab_elems_sorted(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_elems_sorted(void);
#else
extern int __dtraceenabled_slablist___test_slab_elems_sorted(long);
#endif
extern void __dtrace_slablist___test_slab_extrema(int, int, int, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_extrema(void);
#else
extern int __dtraceenabled_slablist___test_slab_extrema(long);
#endif
extern void __dtrace_slablist___test_slab_sublayer(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_sublayer(void);
#else
extern int __dtraceenabled_slablist___test_slab_sublayer(long);
#endif
extern void __dtrace_slablist___test_slab_to_sml(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_to_sml(void);
#else
extern int __dtraceenabled_slablist___test_slab_to_sml(long);
#endif
extern void __dtrace_slablist___test_slabs_sorted(int, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slabs_sorted(void);
#else
extern int __dtraceenabled_slablist___test_slabs_sorted(long);
#endif
extern void __dtrace_slablist___test_slist_usage_ratio(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slist_usage_ratio(void);
#else
extern int __dtraceenabled_slablist___test_slist_usage_ratio(long);
#endif
extern void __dtrace_slablist___test_smlist_elems_sorted(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_smlist_elems_sorted(void);
#else
extern int __dtraceenabled_slablist___test_smlist_elems_sorted(long);
#endif
extern void __dtrace_slablist___test_smlist_nelems(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_smlist_nelems(void);
#else
extern int __dtraceenabled_slablist___test_smlist_nelems(long);
#endif
extern void __dtrace_slablist___test_sublayer_elems_sorted(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_sublayer_elems_sorted(void);
#else
extern int __dtraceenabled_slablist___test_sublayer_elems_sorted(long);
#endif
extern void __dtrace_slablist___test_sublayer_extrema(int, int, int, int, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_sublayer_extrema(void);
#else
extern int __dtraceenabled_slablist___test_sublayer_extrema(long);
#endif
extern void __dtrace_slablist___test_sublayer_nelems(int, uint64_t, uint64_t, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_sublayer_nelems(void);
#else
extern int __dtraceenabled_slablist___test_sublayer_nelems(long);
#endif
extern void __dtrace_slablist___test_sublayers_have_all_slabs(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_sublayers_have_all_slabs(void);
#else
extern int __dtraceenabled_slablist___test_sublayers_have_all_slabs(long);
#endif
extern void __dtrace_slablist___test_sublayers_sorted(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_sublayers_sorted(void);
#else
extern int __dtraceenabled_slablist___test_sublayers_sorted(long);
#endif
extern void __dtrace_slablist___to_slab(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___to_slab(void);
#else
extern int __dtraceenabled_slablist___to_slab(long);
#endif
extern void __dtrace_slablist___to_small_list(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___to_small_list(void);
#else
extern int __dtraceenabled_slablist___to_small_list(long);
#endif
extern void __dtrace_slablist___unlink_slab(slablist_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___unlink_slab(void);
#else
extern int __dtraceenabled_slablist___unlink_slab(long);
#endif
extern void __dtrace_slablist___unlink_sml_node(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___unlink_sml_node(void);
#else
extern int __dtraceenabled_slablist___unlink_sml_node(long);
#endif

#else

#define	SLABLIST_ADD_AFTER(arg0, arg1, arg2)
#define	SLABLIST_ADD_AFTER_ENABLED() (0)
#define	SLABLIST_ADD_AFTER_MK(arg0, arg1, arg2)
#define	SLABLIST_ADD_AFTER_MK_ENABLED() (0)
#define	SLABLIST_ADD_BEFORE(arg0, arg1, arg2)
#define	SLABLIST_ADD_BEFORE_ENABLED() (0)
#define	SLABLIST_ADD_BEFORE_MK(arg0, arg1, arg2)
#define	SLABLIST_ADD_BEFORE_MK_ENABLED() (0)
#define	SLABLIST_ADD_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_ADD_BEGIN_ENABLED() (0)
#define	SLABLIST_ADD_END(arg0)
#define	SLABLIST_ADD_END_ENABLED() (0)
#define	SLABLIST_ADD_HEAD(arg0)
#define	SLABLIST_ADD_HEAD_ENABLED() (0)
#define	SLABLIST_ADD_INTO(arg0, arg1, arg2)
#define	SLABLIST_ADD_INTO_ENABLED() (0)
#define	SLABLIST_ADD_INTO_SPILL_NEXT(arg0, arg1, arg2)
#define	SLABLIST_ADD_INTO_SPILL_NEXT_ENABLED() (0)
#define	SLABLIST_ADD_INTO_SPILL_NEXT_MK(arg0, arg1, arg2)
#define	SLABLIST_ADD_INTO_SPILL_NEXT_MK_ENABLED() (0)
#define	SLABLIST_ADD_INTO_SPILL_PREV(arg0, arg1, arg2)
#define	SLABLIST_ADD_INTO_SPILL_PREV_ENABLED() (0)
#define	SLABLIST_ADD_INTO_SPILL_PREV_MK(arg0, arg1, arg2)
#define	SLABLIST_ADD_INTO_SPILL_PREV_MK_ENABLED() (0)
#define	SLABLIST_ADD_REPLACE(arg0, arg1, arg2, arg3)
#define	SLABLIST_ADD_REPLACE_ENABLED() (0)
#define	SLABLIST_ATTACH_SUBLAYER(arg0, arg1)
#define	SLABLIST_ATTACH_SUBLAYER_ENABLED() (0)
#define	SLABLIST_BIN_SEARCH(arg0, arg1, arg2)
#define	SLABLIST_BIN_SEARCH_ENABLED() (0)
#define	SLABLIST_BIN_SEARCH_LOOP(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_BIN_SEARCH_LOOP_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP(arg0, arg1)
#define	SLABLIST_BUBBLE_UP_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP_BEGIN(arg0)
#define	SLABLIST_BUBBLE_UP_BEGIN_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP_END(arg0)
#define	SLABLIST_BUBBLE_UP_END_ENABLED() (0)
#define	SLABLIST_BWDSHIFT_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_BWDSHIFT_BEGIN_ENABLED() (0)
#define	SLABLIST_BWDSHIFT_END()
#define	SLABLIST_BWDSHIFT_END_ENABLED() (0)
#define	SLABLIST_CREATE(arg0)
#define	SLABLIST_CREATE_ENABLED() (0)
#define	SLABLIST_DESTROY(arg0)
#define	SLABLIST_DESTROY_ENABLED() (0)
#define	SLABLIST_DETACH_SUBLAYER(arg0, arg1)
#define	SLABLIST_DETACH_SUBLAYER_ENABLED() (0)
#define	SLABLIST_FIND_BEGIN(arg0, arg1)
#define	SLABLIST_FIND_BEGIN_ENABLED() (0)
#define	SLABLIST_FIND_END(arg0, arg1)
#define	SLABLIST_FIND_END_ENABLED() (0)
#define	SLABLIST_FIND_SLAB_POS_BEGIN(arg0)
#define	SLABLIST_FIND_SLAB_POS_BEGIN_ENABLED() (0)
#define	SLABLIST_FIND_SLAB_POS_END(arg0)
#define	SLABLIST_FIND_SLAB_POS_END_ENABLED() (0)
#define	SLABLIST_FWDSHIFT_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_FWDSHIFT_BEGIN_ENABLED() (0)
#define	SLABLIST_FWDSHIFT_END()
#define	SLABLIST_FWDSHIFT_END_ENABLED() (0)
#define	SLABLIST_GET_RAND(arg0, arg1)
#define	SLABLIST_GET_RAND_ENABLED() (0)
#define	SLABLIST_GOT_HERE(arg0)
#define	SLABLIST_GOT_HERE_ENABLED() (0)
#define	SLABLIST_LINEAR_SCAN(arg0, arg1)
#define	SLABLIST_LINEAR_SCAN_ENABLED() (0)
#define	SLABLIST_LINEAR_SCAN_BEGIN(arg0)
#define	SLABLIST_LINEAR_SCAN_BEGIN_ENABLED() (0)
#define	SLABLIST_LINEAR_SCAN_END(arg0)
#define	SLABLIST_LINEAR_SCAN_END_ENABLED() (0)
#define	SLABLIST_LINK_SLAB_AFTER(arg0, arg1, arg2)
#define	SLABLIST_LINK_SLAB_AFTER_ENABLED() (0)
#define	SLABLIST_LINK_SLAB_BEFORE(arg0, arg1, arg2)
#define	SLABLIST_LINK_SLAB_BEFORE_ENABLED() (0)
#define	SLABLIST_LINK_SML_NODE(arg0)
#define	SLABLIST_LINK_SML_NODE_ENABLED() (0)
#define	SLABLIST_MOVE_MID_TO_NEXT(arg0, arg1, arg2)
#define	SLABLIST_MOVE_MID_TO_NEXT_ENABLED() (0)
#define	SLABLIST_MOVE_MID_TO_PREV(arg0, arg1, arg2)
#define	SLABLIST_MOVE_MID_TO_PREV_ENABLED() (0)
#define	SLABLIST_MOVE_NEXT_TO_MID(arg0, arg1, arg2)
#define	SLABLIST_MOVE_NEXT_TO_MID_ENABLED() (0)
#define	SLABLIST_MOVE_NEXT_TO_PREV(arg0, arg1, arg2)
#define	SLABLIST_MOVE_NEXT_TO_PREV_ENABLED() (0)
#define	SLABLIST_MOVE_PREV_TO_MID(arg0, arg1, arg2)
#define	SLABLIST_MOVE_PREV_TO_MID_ENABLED() (0)
#define	SLABLIST_MOVE_PREV_TO_NEXT(arg0, arg1, arg2)
#define	SLABLIST_MOVE_PREV_TO_NEXT_ENABLED() (0)
#define	SLABLIST_REAP_BEGIN(arg0)
#define	SLABLIST_REAP_BEGIN_ENABLED() (0)
#define	SLABLIST_REAP_END(arg0)
#define	SLABLIST_REAP_END_ENABLED() (0)
#define	SLABLIST_REM_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_REM_BEGIN_ENABLED() (0)
#define	SLABLIST_REM_END(arg0)
#define	SLABLIST_REM_END_ENABLED() (0)
#define	SLABLIST_REM_HEAD(arg0)
#define	SLABLIST_REM_HEAD_ENABLED() (0)
#define	SLABLIST_RIPPLE_ADD_SLAB(arg0, arg1, arg2)
#define	SLABLIST_RIPPLE_ADD_SLAB_ENABLED() (0)
#define	SLABLIST_RIPPLE_REM_SLAB(arg0, arg1, arg2)
#define	SLABLIST_RIPPLE_REM_SLAB_ENABLED() (0)
#define	SLABLIST_SET_CRUMB(arg0, arg1, arg2)
#define	SLABLIST_SET_CRUMB_ENABLED() (0)
#define	SLABLIST_SL_DEC_ELEMS(arg0)
#define	SLABLIST_SL_DEC_ELEMS_ENABLED() (0)
#define	SLABLIST_SL_DEC_SLABS(arg0)
#define	SLABLIST_SL_DEC_SLABS_ENABLED() (0)
#define	SLABLIST_SL_INC_ELEMS(arg0)
#define	SLABLIST_SL_INC_ELEMS_ENABLED() (0)
#define	SLABLIST_SL_INC_LAYER(arg0)
#define	SLABLIST_SL_INC_LAYER_ENABLED() (0)
#define	SLABLIST_SL_INC_SLABS(arg0)
#define	SLABLIST_SL_INC_SLABS_ENABLED() (0)
#define	SLABLIST_SL_INC_SUBLAYERS(arg0)
#define	SLABLIST_SL_INC_SUBLAYERS_ENABLED() (0)
#define	SLABLIST_SLAB_BIN_SRCH(arg0, arg1)
#define	SLABLIST_SLAB_BIN_SRCH_ENABLED() (0)
#define	SLABLIST_SLAB_DEC_ELEMS(arg0)
#define	SLABLIST_SLAB_DEC_ELEMS_ENABLED() (0)
#define	SLABLIST_SLAB_INC_ELEMS(arg0)
#define	SLABLIST_SLAB_INC_ELEMS_ENABLED() (0)
#define	SLABLIST_SLAB_MK(arg0)
#define	SLABLIST_SLAB_MK_ENABLED() (0)
#define	SLABLIST_SLAB_RM(arg0)
#define	SLABLIST_SLAB_RM_ENABLED() (0)
#define	SLABLIST_SLAB_SET_MAX(arg0)
#define	SLABLIST_SLAB_SET_MAX_ENABLED() (0)
#define	SLABLIST_SLAB_SET_MIN(arg0)
#define	SLABLIST_SLAB_SET_MIN_ENABLED() (0)
#define	SLABLIST_SUBSLAB_BIN_SRCH(arg0, arg1)
#define	SLABLIST_SUBSLAB_BIN_SRCH_ENABLED() (0)
#define	SLABLIST_TEST()
#define	SLABLIST_TEST_ENABLED() (0)
#define	SLABLIST_TEST_BREAD_CRUMBS(arg0, arg1)
#define	SLABLIST_TEST_BREAD_CRUMBS_ENABLED() (0)
#define	SLABLIST_TEST_BUBBLE_UP(arg0, arg1)
#define	SLABLIST_TEST_BUBBLE_UP_ENABLED() (0)
#define	SLABLIST_TEST_IS_SLAB_LIST(arg0)
#define	SLABLIST_TEST_IS_SLAB_LIST_ENABLED() (0)
#define	SLABLIST_TEST_IS_SML_LIST(arg0)
#define	SLABLIST_TEST_IS_SML_LIST_ENABLED() (0)
#define	SLABLIST_TEST_MOVE_NEXT(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_TEST_MOVE_NEXT_ENABLED() (0)
#define	SLABLIST_TEST_MOVE_PREV(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_TEST_MOVE_PREV_ENABLED() (0)
#define	SLABLIST_TEST_NELEMS(arg0, arg1, arg2)
#define	SLABLIST_TEST_NELEMS_ENABLED() (0)
#define	SLABLIST_TEST_NSLABS(arg0, arg1, arg2)
#define	SLABLIST_TEST_NSLABS_ENABLED() (0)
#define	SLABLIST_TEST_NULLARG(arg0, arg1)
#define	SLABLIST_TEST_NULLARG_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_BKPTR(arg0)
#define	SLABLIST_TEST_SLAB_BKPTR_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_ELEMS_MAX(arg0, arg1)
#define	SLABLIST_TEST_SLAB_ELEMS_MAX_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_ELEMS_SORTED(arg0)
#define	SLABLIST_TEST_SLAB_ELEMS_SORTED_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_EXTREMA(arg0, arg1, arg2, arg3)
#define	SLABLIST_TEST_SLAB_EXTREMA_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_SUBLAYER(arg0)
#define	SLABLIST_TEST_SLAB_SUBLAYER_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_TO_SML(arg0)
#define	SLABLIST_TEST_SLAB_TO_SML_ENABLED() (0)
#define	SLABLIST_TEST_SLABS_SORTED(arg0, arg1, arg2)
#define	SLABLIST_TEST_SLABS_SORTED_ENABLED() (0)
#define	SLABLIST_TEST_SLIST_USAGE_RATIO(arg0)
#define	SLABLIST_TEST_SLIST_USAGE_RATIO_ENABLED() (0)
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED(arg0)
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED_ENABLED() (0)
#define	SLABLIST_TEST_SMLIST_NELEMS(arg0)
#define	SLABLIST_TEST_SMLIST_NELEMS_ENABLED() (0)
#define	SLABLIST_TEST_SUBLAYER_ELEMS_SORTED(arg0, arg1)
#define	SLABLIST_TEST_SUBLAYER_ELEMS_SORTED_ENABLED() (0)
#define	SLABLIST_TEST_SUBLAYER_EXTREMA(arg0, arg1, arg2, arg3, arg4)
#define	SLABLIST_TEST_SUBLAYER_EXTREMA_ENABLED() (0)
#define	SLABLIST_TEST_SUBLAYER_NELEMS(arg0, arg1, arg2, arg3)
#define	SLABLIST_TEST_SUBLAYER_NELEMS_ENABLED() (0)
#define	SLABLIST_TEST_SUBLAYERS_HAVE_ALL_SLABS(arg0, arg1)
#define	SLABLIST_TEST_SUBLAYERS_HAVE_ALL_SLABS_ENABLED() (0)
#define	SLABLIST_TEST_SUBLAYERS_SORTED(arg0, arg1)
#define	SLABLIST_TEST_SUBLAYERS_SORTED_ENABLED() (0)
#define	SLABLIST_TO_SLAB(arg0)
#define	SLABLIST_TO_SLAB_ENABLED() (0)
#define	SLABLIST_TO_SMALL_LIST(arg0)
#define	SLABLIST_TO_SMALL_LIST_ENABLED() (0)
#define	SLABLIST_UNLINK_SLAB(arg0, arg1)
#define	SLABLIST_UNLINK_SLAB_ENABLED() (0)
#define	SLABLIST_UNLINK_SML_NODE(arg0)
#define	SLABLIST_UNLINK_SML_NODE_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _SLABLIST_PROVIDER_H */
