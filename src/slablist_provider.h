/*
 * Generated by dtrace(1M).
 */

#ifndef	_SLABLIST_PROVIDER_H
#define	_SLABLIST_PROVIDER_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#if _DTRACE_VERSION

#define	SLABLIST_ADD_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___add_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_ADD_BEGIN_ENABLED() \
	__dtraceenabled_slablist___add_begin()
#else
#define	SLABLIST_ADD_BEGIN_ENABLED() \
	__dtraceenabled_slablist___add_begin(0)
#endif
#define	SLABLIST_ADD_END(arg0) \
	__dtrace_slablist___add_end(arg0)
#ifndef	__sparc
#define	SLABLIST_ADD_END_ENABLED() \
	__dtraceenabled_slablist___add_end()
#else
#define	SLABLIST_ADD_END_ENABLED() \
	__dtraceenabled_slablist___add_end(0)
#endif
#define	SLABLIST_ATTACH_SUBLAYER(arg0, arg1) \
	__dtrace_slablist___attach_sublayer(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_ATTACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___attach_sublayer()
#else
#define	SLABLIST_ATTACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___attach_sublayer(0)
#endif
#define	SLABLIST_BIN_SEARCH(arg0, arg1, arg2) \
	__dtrace_slablist___bin_search(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_BIN_SEARCH_ENABLED() \
	__dtraceenabled_slablist___bin_search()
#else
#define	SLABLIST_BIN_SEARCH_ENABLED() \
	__dtraceenabled_slablist___bin_search(0)
#endif
#define	SLABLIST_BIN_SEARCH_LOOP(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___bin_search_loop(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_BIN_SEARCH_LOOP_ENABLED() \
	__dtraceenabled_slablist___bin_search_loop()
#else
#define	SLABLIST_BIN_SEARCH_LOOP_ENABLED() \
	__dtraceenabled_slablist___bin_search_loop(0)
#endif
#define	SLABLIST_BUBBLE_UP(arg0, arg1) \
	__dtrace_slablist___bubble_up(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___bubble_up()
#else
#define	SLABLIST_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___bubble_up(0)
#endif
#define	SLABLIST_BUBBLE_UP_BEGIN(arg0) \
	__dtrace_slablist___bubble_up_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bubble_up_begin()
#else
#define	SLABLIST_BUBBLE_UP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bubble_up_begin(0)
#endif
#define	SLABLIST_BUBBLE_UP_END(arg0) \
	__dtrace_slablist___bubble_up_end(arg0)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_END_ENABLED() \
	__dtraceenabled_slablist___bubble_up_end()
#else
#define	SLABLIST_BUBBLE_UP_END_ENABLED() \
	__dtraceenabled_slablist___bubble_up_end(0)
#endif
#define	SLABLIST_BUBBLE_UP_TOP(arg0, arg1) \
	__dtrace_slablist___bubble_up_top(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_BUBBLE_UP_TOP_ENABLED() \
	__dtraceenabled_slablist___bubble_up_top()
#else
#define	SLABLIST_BUBBLE_UP_TOP_ENABLED() \
	__dtraceenabled_slablist___bubble_up_top(0)
#endif
#define	SLABLIST_BWDSHIFT_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___bwdshift_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_BWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bwdshift_begin()
#else
#define	SLABLIST_BWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___bwdshift_begin(0)
#endif
#define	SLABLIST_BWDSHIFT_END() \
	__dtrace_slablist___bwdshift_end()
#ifndef	__sparc
#define	SLABLIST_BWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___bwdshift_end()
#else
#define	SLABLIST_BWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___bwdshift_end(0)
#endif
#define	SLABLIST_CREATE(arg0) \
	__dtrace_slablist___create(arg0)
#ifndef	__sparc
#define	SLABLIST_CREATE_ENABLED() \
	__dtraceenabled_slablist___create()
#else
#define	SLABLIST_CREATE_ENABLED() \
	__dtraceenabled_slablist___create(0)
#endif
#define	SLABLIST_DESTROY(arg0) \
	__dtrace_slablist___destroy(arg0)
#ifndef	__sparc
#define	SLABLIST_DESTROY_ENABLED() \
	__dtraceenabled_slablist___destroy()
#else
#define	SLABLIST_DESTROY_ENABLED() \
	__dtraceenabled_slablist___destroy(0)
#endif
#define	SLABLIST_DETACH_SUBLAYER(arg0, arg1) \
	__dtrace_slablist___detach_sublayer(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_DETACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___detach_sublayer()
#else
#define	SLABLIST_DETACH_SUBLAYER_ENABLED() \
	__dtraceenabled_slablist___detach_sublayer(0)
#endif
#define	SLABLIST_EXTREME_SLAB(arg0) \
	__dtrace_slablist___extreme_slab(arg0)
#ifndef	__sparc
#define	SLABLIST_EXTREME_SLAB_ENABLED() \
	__dtraceenabled_slablist___extreme_slab()
#else
#define	SLABLIST_EXTREME_SLAB_ENABLED() \
	__dtraceenabled_slablist___extreme_slab(0)
#endif
#define	SLABLIST_FIND_BEGIN(arg0, arg1) \
	__dtrace_slablist___find_begin(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_FIND_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_begin()
#else
#define	SLABLIST_FIND_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_begin(0)
#endif
#define	SLABLIST_FIND_END(arg0, arg1) \
	__dtrace_slablist___find_end(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_FIND_END_ENABLED() \
	__dtraceenabled_slablist___find_end()
#else
#define	SLABLIST_FIND_END_ENABLED() \
	__dtraceenabled_slablist___find_end(0)
#endif
#define	SLABLIST_FIND_SLAB_POS_BEGIN(arg0) \
	__dtrace_slablist___find_slab_pos_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_FIND_SLAB_POS_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_begin()
#else
#define	SLABLIST_FIND_SLAB_POS_BEGIN_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_begin(0)
#endif
#define	SLABLIST_FIND_SLAB_POS_END(arg0) \
	__dtrace_slablist___find_slab_pos_end(arg0)
#ifndef	__sparc
#define	SLABLIST_FIND_SLAB_POS_END_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_end()
#else
#define	SLABLIST_FIND_SLAB_POS_END_ENABLED() \
	__dtraceenabled_slablist___find_slab_pos_end(0)
#endif
#define	SLABLIST_FOLDL_BEGIN(arg0) \
	__dtrace_slablist___foldl_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_FOLDL_BEGIN_ENABLED() \
	__dtraceenabled_slablist___foldl_begin()
#else
#define	SLABLIST_FOLDL_BEGIN_ENABLED() \
	__dtraceenabled_slablist___foldl_begin(0)
#endif
#define	SLABLIST_FOLDL_END(arg0) \
	__dtrace_slablist___foldl_end(arg0)
#ifndef	__sparc
#define	SLABLIST_FOLDL_END_ENABLED() \
	__dtraceenabled_slablist___foldl_end()
#else
#define	SLABLIST_FOLDL_END_ENABLED() \
	__dtraceenabled_slablist___foldl_end(0)
#endif
#define	SLABLIST_FOLDR_BEGIN(arg0) \
	__dtrace_slablist___foldr_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_FOLDR_BEGIN_ENABLED() \
	__dtraceenabled_slablist___foldr_begin()
#else
#define	SLABLIST_FOLDR_BEGIN_ENABLED() \
	__dtraceenabled_slablist___foldr_begin(0)
#endif
#define	SLABLIST_FOLDR_END(arg0) \
	__dtrace_slablist___foldr_end(arg0)
#ifndef	__sparc
#define	SLABLIST_FOLDR_END_ENABLED() \
	__dtraceenabled_slablist___foldr_end()
#else
#define	SLABLIST_FOLDR_END_ENABLED() \
	__dtraceenabled_slablist___foldr_end(0)
#endif
#define	SLABLIST_FWDSHIFT_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___fwdshift_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_FWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___fwdshift_begin()
#else
#define	SLABLIST_FWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___fwdshift_begin(0)
#endif
#define	SLABLIST_FWDSHIFT_END() \
	__dtrace_slablist___fwdshift_end()
#ifndef	__sparc
#define	SLABLIST_FWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___fwdshift_end()
#else
#define	SLABLIST_FWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___fwdshift_end(0)
#endif
#define	SLABLIST_GET_POS_BASE_WALK(arg0) \
	__dtrace_slablist___get_pos_base_walk(arg0)
#ifndef	__sparc
#define	SLABLIST_GET_POS_BASE_WALK_ENABLED() \
	__dtraceenabled_slablist___get_pos_base_walk()
#else
#define	SLABLIST_GET_POS_BASE_WALK_ENABLED() \
	__dtraceenabled_slablist___get_pos_base_walk(0)
#endif
#define	SLABLIST_GET_POS_BEGIN(arg0, arg1) \
	__dtrace_slablist___get_pos_begin(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_GET_POS_BEGIN_ENABLED() \
	__dtraceenabled_slablist___get_pos_begin()
#else
#define	SLABLIST_GET_POS_BEGIN_ENABLED() \
	__dtraceenabled_slablist___get_pos_begin(0)
#endif
#define	SLABLIST_GET_POS_END(arg0) \
	__dtrace_slablist___get_pos_end(arg0)
#ifndef	__sparc
#define	SLABLIST_GET_POS_END_ENABLED() \
	__dtraceenabled_slablist___get_pos_end()
#else
#define	SLABLIST_GET_POS_END_ENABLED() \
	__dtraceenabled_slablist___get_pos_end(0)
#endif
#define	SLABLIST_GET_POS_SHALLOW() \
	__dtrace_slablist___get_pos_shallow()
#ifndef	__sparc
#define	SLABLIST_GET_POS_SHALLOW_ENABLED() \
	__dtraceenabled_slablist___get_pos_shallow()
#else
#define	SLABLIST_GET_POS_SHALLOW_ENABLED() \
	__dtraceenabled_slablist___get_pos_shallow(0)
#endif
#define	SLABLIST_GET_POS_SUB_WALK(arg0) \
	__dtrace_slablist___get_pos_sub_walk(arg0)
#ifndef	__sparc
#define	SLABLIST_GET_POS_SUB_WALK_ENABLED() \
	__dtraceenabled_slablist___get_pos_sub_walk()
#else
#define	SLABLIST_GET_POS_SUB_WALK_ENABLED() \
	__dtraceenabled_slablist___get_pos_sub_walk(0)
#endif
#define	SLABLIST_GET_POS_TOP_WALK(arg0) \
	__dtrace_slablist___get_pos_top_walk(arg0)
#ifndef	__sparc
#define	SLABLIST_GET_POS_TOP_WALK_ENABLED() \
	__dtraceenabled_slablist___get_pos_top_walk()
#else
#define	SLABLIST_GET_POS_TOP_WALK_ENABLED() \
	__dtraceenabled_slablist___get_pos_top_walk(0)
#endif
#define	SLABLIST_GOT_HERE(arg0) \
	__dtrace_slablist___got_here(arg0)
#ifndef	__sparc
#define	SLABLIST_GOT_HERE_ENABLED() \
	__dtraceenabled_slablist___got_here()
#else
#define	SLABLIST_GOT_HERE_ENABLED() \
	__dtraceenabled_slablist___got_here(0)
#endif
#define	SLABLIST_LINEAR_SCAN(arg0, arg1) \
	__dtrace_slablist___linear_scan(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_LINEAR_SCAN_ENABLED() \
	__dtraceenabled_slablist___linear_scan()
#else
#define	SLABLIST_LINEAR_SCAN_ENABLED() \
	__dtraceenabled_slablist___linear_scan(0)
#endif
#define	SLABLIST_LINEAR_SCAN_BEGIN(arg0) \
	__dtrace_slablist___linear_scan_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_LINEAR_SCAN_BEGIN_ENABLED() \
	__dtraceenabled_slablist___linear_scan_begin()
#else
#define	SLABLIST_LINEAR_SCAN_BEGIN_ENABLED() \
	__dtraceenabled_slablist___linear_scan_begin(0)
#endif
#define	SLABLIST_LINEAR_SCAN_END(arg0) \
	__dtrace_slablist___linear_scan_end(arg0)
#ifndef	__sparc
#define	SLABLIST_LINEAR_SCAN_END_ENABLED() \
	__dtraceenabled_slablist___linear_scan_end()
#else
#define	SLABLIST_LINEAR_SCAN_END_ENABLED() \
	__dtraceenabled_slablist___linear_scan_end(0)
#endif
#define	SLABLIST_LINK_SLAB_AFTER(arg0, arg1, arg2) \
	__dtrace_slablist___link_slab_after(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_LINK_SLAB_AFTER_ENABLED() \
	__dtraceenabled_slablist___link_slab_after()
#else
#define	SLABLIST_LINK_SLAB_AFTER_ENABLED() \
	__dtraceenabled_slablist___link_slab_after(0)
#endif
#define	SLABLIST_LINK_SLAB_BEFORE(arg0, arg1, arg2) \
	__dtrace_slablist___link_slab_before(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_LINK_SLAB_BEFORE_ENABLED() \
	__dtraceenabled_slablist___link_slab_before()
#else
#define	SLABLIST_LINK_SLAB_BEFORE_ENABLED() \
	__dtraceenabled_slablist___link_slab_before(0)
#endif
#define	SLABLIST_LINK_SML_NODE(arg0) \
	__dtrace_slablist___link_sml_node(arg0)
#ifndef	__sparc
#define	SLABLIST_LINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___link_sml_node()
#else
#define	SLABLIST_LINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___link_sml_node(0)
#endif
#define	SLABLIST_LINK_SUBSLAB_AFTER(arg0, arg1, arg2) \
	__dtrace_slablist___link_subslab_after(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_LINK_SUBSLAB_AFTER_ENABLED() \
	__dtraceenabled_slablist___link_subslab_after()
#else
#define	SLABLIST_LINK_SUBSLAB_AFTER_ENABLED() \
	__dtraceenabled_slablist___link_subslab_after(0)
#endif
#define	SLABLIST_LINK_SUBSLAB_BEFORE(arg0, arg1, arg2) \
	__dtrace_slablist___link_subslab_before(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_LINK_SUBSLAB_BEFORE_ENABLED() \
	__dtraceenabled_slablist___link_subslab_before()
#else
#define	SLABLIST_LINK_SUBSLAB_BEFORE_ENABLED() \
	__dtraceenabled_slablist___link_subslab_before(0)
#endif
#define	SLABLIST_MAP_BEGIN(arg0) \
	__dtrace_slablist___map_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_MAP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___map_begin()
#else
#define	SLABLIST_MAP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___map_begin(0)
#endif
#define	SLABLIST_MAP_END(arg0) \
	__dtrace_slablist___map_end(arg0)
#ifndef	__sparc
#define	SLABLIST_MAP_END_ENABLED() \
	__dtraceenabled_slablist___map_end()
#else
#define	SLABLIST_MAP_END_ENABLED() \
	__dtraceenabled_slablist___map_end(0)
#endif
#define	SLABLIST_REAP_BEGIN(arg0) \
	__dtrace_slablist___reap_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_REAP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___reap_begin()
#else
#define	SLABLIST_REAP_BEGIN_ENABLED() \
	__dtraceenabled_slablist___reap_begin(0)
#endif
#define	SLABLIST_REAP_END(arg0) \
	__dtrace_slablist___reap_end(arg0)
#ifndef	__sparc
#define	SLABLIST_REAP_END_ENABLED() \
	__dtraceenabled_slablist___reap_end()
#else
#define	SLABLIST_REAP_END_ENABLED() \
	__dtraceenabled_slablist___reap_end(0)
#endif
#define	SLABLIST_REM_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___rem_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_REM_BEGIN_ENABLED() \
	__dtraceenabled_slablist___rem_begin()
#else
#define	SLABLIST_REM_BEGIN_ENABLED() \
	__dtraceenabled_slablist___rem_begin(0)
#endif
#define	SLABLIST_REM_END(arg0) \
	__dtrace_slablist___rem_end(arg0)
#ifndef	__sparc
#define	SLABLIST_REM_END_ENABLED() \
	__dtraceenabled_slablist___rem_end()
#else
#define	SLABLIST_REM_END_ENABLED() \
	__dtraceenabled_slablist___rem_end(0)
#endif
#define	SLABLIST_REM_RANGE_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___rem_range_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_REM_RANGE_BEGIN_ENABLED() \
	__dtraceenabled_slablist___rem_range_begin()
#else
#define	SLABLIST_REM_RANGE_BEGIN_ENABLED() \
	__dtraceenabled_slablist___rem_range_begin(0)
#endif
#define	SLABLIST_REM_RANGE_END(arg0) \
	__dtrace_slablist___rem_range_end(arg0)
#ifndef	__sparc
#define	SLABLIST_REM_RANGE_END_ENABLED() \
	__dtraceenabled_slablist___rem_range_end()
#else
#define	SLABLIST_REM_RANGE_END_ENABLED() \
	__dtraceenabled_slablist___rem_range_end(0)
#endif
#define	SLABLIST_RIPPLE_ADD_SLAB(arg0, arg1, arg2) \
	__dtrace_slablist___ripple_add_slab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_RIPPLE_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_add_slab()
#else
#define	SLABLIST_RIPPLE_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_add_slab(0)
#endif
#define	SLABLIST_RIPPLE_ADD_SUBSLAB(arg0, arg1, arg2) \
	__dtrace_slablist___ripple_add_subslab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_RIPPLE_ADD_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_add_subslab()
#else
#define	SLABLIST_RIPPLE_ADD_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_add_subslab(0)
#endif
#define	SLABLIST_RIPPLE_REM_SLAB(arg0, arg1, arg2) \
	__dtrace_slablist___ripple_rem_slab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_RIPPLE_REM_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_rem_slab()
#else
#define	SLABLIST_RIPPLE_REM_SLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_rem_slab(0)
#endif
#define	SLABLIST_RIPPLE_REM_SUBSLAB(arg0, arg1, arg2) \
	__dtrace_slablist___ripple_rem_subslab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_RIPPLE_REM_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_rem_subslab()
#else
#define	SLABLIST_RIPPLE_REM_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___ripple_rem_subslab(0)
#endif
#define	SLABLIST_SET_CRUMB(arg0, arg1, arg2) \
	__dtrace_slablist___set_crumb(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SET_CRUMB_ENABLED() \
	__dtraceenabled_slablist___set_crumb()
#else
#define	SLABLIST_SET_CRUMB_ENABLED() \
	__dtraceenabled_slablist___set_crumb(0)
#endif
#define	SLABLIST_SET_END(arg0, arg1) \
	__dtrace_slablist___set_end(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SET_END_ENABLED() \
	__dtraceenabled_slablist___set_end()
#else
#define	SLABLIST_SET_END_ENABLED() \
	__dtraceenabled_slablist___set_end(0)
#endif
#define	SLABLIST_SET_HEAD(arg0, arg1) \
	__dtrace_slablist___set_head(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SET_HEAD_ENABLED() \
	__dtraceenabled_slablist___set_head()
#else
#define	SLABLIST_SET_HEAD_ENABLED() \
	__dtraceenabled_slablist___set_head(0)
#endif
#define	SLABLIST_SET_USR_ELEMS(arg0) \
	__dtrace_slablist___set_usr_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SET_USR_ELEMS_ENABLED() \
	__dtraceenabled_slablist___set_usr_elems()
#else
#define	SLABLIST_SET_USR_ELEMS_ENABLED() \
	__dtraceenabled_slablist___set_usr_elems(0)
#endif
#define	SLABLIST_SL_DEC_ELEMS(arg0) \
	__dtrace_slablist___sl_dec_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_elems()
#else
#define	SLABLIST_SL_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_elems(0)
#endif
#define	SLABLIST_SL_DEC_SLABS(arg0) \
	__dtrace_slablist___sl_dec_slabs(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_DEC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_slabs()
#else
#define	SLABLIST_SL_DEC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_slabs(0)
#endif
#define	SLABLIST_SL_DEC_SUBSLABS(arg0) \
	__dtrace_slablist___sl_dec_subslabs(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_DEC_SUBSLABS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_subslabs()
#else
#define	SLABLIST_SL_DEC_SUBSLABS_ENABLED() \
	__dtraceenabled_slablist___sl_dec_subslabs(0)
#endif
#define	SLABLIST_SL_INC_ELEMS(arg0) \
	__dtrace_slablist___sl_inc_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_elems()
#else
#define	SLABLIST_SL_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_elems(0)
#endif
#define	SLABLIST_SL_INC_LAYER(arg0) \
	__dtrace_slablist___sl_inc_layer(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_LAYER_ENABLED() \
	__dtraceenabled_slablist___sl_inc_layer()
#else
#define	SLABLIST_SL_INC_LAYER_ENABLED() \
	__dtraceenabled_slablist___sl_inc_layer(0)
#endif
#define	SLABLIST_SL_INC_SLABS(arg0) \
	__dtrace_slablist___sl_inc_slabs(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_slabs()
#else
#define	SLABLIST_SL_INC_SLABS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_slabs(0)
#endif
#define	SLABLIST_SL_INC_SUBLAYERS(arg0) \
	__dtrace_slablist___sl_inc_sublayers(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_SUBLAYERS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_sublayers()
#else
#define	SLABLIST_SL_INC_SUBLAYERS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_sublayers(0)
#endif
#define	SLABLIST_SL_INC_SUBSLABS(arg0) \
	__dtrace_slablist___sl_inc_subslabs(arg0)
#ifndef	__sparc
#define	SLABLIST_SL_INC_SUBSLABS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_subslabs()
#else
#define	SLABLIST_SL_INC_SUBSLABS_ENABLED() \
	__dtraceenabled_slablist___sl_inc_subslabs(0)
#endif
#define	SLABLIST_SLAB_AA(arg0, arg1, arg2) \
	__dtrace_slablist___slab_aa(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AA_ENABLED() \
	__dtraceenabled_slablist___slab_aa()
#else
#define	SLABLIST_SLAB_AA_ENABLED() \
	__dtraceenabled_slablist___slab_aa(0)
#endif
#define	SLABLIST_SLAB_AAM(arg0, arg1, arg2) \
	__dtrace_slablist___slab_aam(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AAM_ENABLED() \
	__dtraceenabled_slablist___slab_aam()
#else
#define	SLABLIST_SLAB_AAM_ENABLED() \
	__dtraceenabled_slablist___slab_aam(0)
#endif
#define	SLABLIST_SLAB_AB(arg0, arg1, arg2) \
	__dtrace_slablist___slab_ab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AB_ENABLED() \
	__dtraceenabled_slablist___slab_ab()
#else
#define	SLABLIST_SLAB_AB_ENABLED() \
	__dtraceenabled_slablist___slab_ab(0)
#endif
#define	SLABLIST_SLAB_ABM(arg0, arg1, arg2) \
	__dtrace_slablist___slab_abm(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_ABM_ENABLED() \
	__dtraceenabled_slablist___slab_abm()
#else
#define	SLABLIST_SLAB_ABM_ENABLED() \
	__dtraceenabled_slablist___slab_abm(0)
#endif
#define	SLABLIST_SLAB_AI(arg0, arg1, arg2) \
	__dtrace_slablist___slab_ai(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AI_ENABLED() \
	__dtraceenabled_slablist___slab_ai()
#else
#define	SLABLIST_SLAB_AI_ENABLED() \
	__dtraceenabled_slablist___slab_ai(0)
#endif
#define	SLABLIST_SLAB_AISN(arg0, arg1, arg2) \
	__dtrace_slablist___slab_aisn(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AISN_ENABLED() \
	__dtraceenabled_slablist___slab_aisn()
#else
#define	SLABLIST_SLAB_AISN_ENABLED() \
	__dtraceenabled_slablist___slab_aisn(0)
#endif
#define	SLABLIST_SLAB_AISNM(arg0, arg1, arg2) \
	__dtrace_slablist___slab_aisnm(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AISNM_ENABLED() \
	__dtraceenabled_slablist___slab_aisnm()
#else
#define	SLABLIST_SLAB_AISNM_ENABLED() \
	__dtraceenabled_slablist___slab_aisnm(0)
#endif
#define	SLABLIST_SLAB_AISP(arg0, arg1, arg2) \
	__dtrace_slablist___slab_aisp(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AISP_ENABLED() \
	__dtraceenabled_slablist___slab_aisp()
#else
#define	SLABLIST_SLAB_AISP_ENABLED() \
	__dtraceenabled_slablist___slab_aisp(0)
#endif
#define	SLABLIST_SLAB_AISPM(arg0, arg1, arg2) \
	__dtrace_slablist___slab_aispm(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_AISPM_ENABLED() \
	__dtraceenabled_slablist___slab_aispm()
#else
#define	SLABLIST_SLAB_AISPM_ENABLED() \
	__dtraceenabled_slablist___slab_aispm(0)
#endif
#define	SLABLIST_SLAB_AR(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___slab_ar(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SLAB_AR_ENABLED() \
	__dtraceenabled_slablist___slab_ar()
#else
#define	SLABLIST_SLAB_AR_ENABLED() \
	__dtraceenabled_slablist___slab_ar(0)
#endif
#define	SLABLIST_SLAB_BIN_SRCH(arg0, arg1) \
	__dtrace_slablist___slab_bin_srch(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___slab_bin_srch()
#else
#define	SLABLIST_SLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___slab_bin_srch(0)
#endif
#define	SLABLIST_SLAB_DEC_ELEMS(arg0) \
	__dtrace_slablist___slab_dec_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_dec_elems()
#else
#define	SLABLIST_SLAB_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_dec_elems(0)
#endif
#define	SLABLIST_SLAB_INC_ELEMS(arg0) \
	__dtrace_slablist___slab_inc_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_inc_elems()
#else
#define	SLABLIST_SLAB_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___slab_inc_elems(0)
#endif
#define	SLABLIST_SLAB_MK(arg0) \
	__dtrace_slablist___slab_mk(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_MK_ENABLED() \
	__dtraceenabled_slablist___slab_mk()
#else
#define	SLABLIST_SLAB_MK_ENABLED() \
	__dtraceenabled_slablist___slab_mk(0)
#endif
#define	SLABLIST_SLAB_MOVE_MID_TO_NEXT(arg0, arg1, arg2) \
	__dtrace_slablist___slab_move_mid_to_next(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_MOVE_MID_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___slab_move_mid_to_next()
#else
#define	SLABLIST_SLAB_MOVE_MID_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___slab_move_mid_to_next(0)
#endif
#define	SLABLIST_SLAB_MOVE_MID_TO_PREV(arg0, arg1, arg2) \
	__dtrace_slablist___slab_move_mid_to_prev(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_MOVE_MID_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___slab_move_mid_to_prev()
#else
#define	SLABLIST_SLAB_MOVE_MID_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___slab_move_mid_to_prev(0)
#endif
#define	SLABLIST_SLAB_MOVE_NEXT_TO_MID(arg0, arg1, arg2) \
	__dtrace_slablist___slab_move_next_to_mid(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_MOVE_NEXT_TO_MID_ENABLED() \
	__dtraceenabled_slablist___slab_move_next_to_mid()
#else
#define	SLABLIST_SLAB_MOVE_NEXT_TO_MID_ENABLED() \
	__dtraceenabled_slablist___slab_move_next_to_mid(0)
#endif
#define	SLABLIST_SLAB_MOVE_PREV_TO_MID(arg0, arg1, arg2) \
	__dtrace_slablist___slab_move_prev_to_mid(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SLAB_MOVE_PREV_TO_MID_ENABLED() \
	__dtraceenabled_slablist___slab_move_prev_to_mid()
#else
#define	SLABLIST_SLAB_MOVE_PREV_TO_MID_ENABLED() \
	__dtraceenabled_slablist___slab_move_prev_to_mid(0)
#endif
#define	SLABLIST_SLAB_RM(arg0) \
	__dtrace_slablist___slab_rm(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_RM_ENABLED() \
	__dtraceenabled_slablist___slab_rm()
#else
#define	SLABLIST_SLAB_RM_ENABLED() \
	__dtraceenabled_slablist___slab_rm(0)
#endif
#define	SLABLIST_SLAB_SET_BELOW(arg0) \
	__dtrace_slablist___slab_set_below(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_SET_BELOW_ENABLED() \
	__dtraceenabled_slablist___slab_set_below()
#else
#define	SLABLIST_SLAB_SET_BELOW_ENABLED() \
	__dtraceenabled_slablist___slab_set_below(0)
#endif
#define	SLABLIST_SLAB_SET_MAX(arg0) \
	__dtrace_slablist___slab_set_max(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_SET_MAX_ENABLED() \
	__dtraceenabled_slablist___slab_set_max()
#else
#define	SLABLIST_SLAB_SET_MAX_ENABLED() \
	__dtraceenabled_slablist___slab_set_max(0)
#endif
#define	SLABLIST_SLAB_SET_MIN(arg0) \
	__dtrace_slablist___slab_set_min(arg0)
#ifndef	__sparc
#define	SLABLIST_SLAB_SET_MIN_ENABLED() \
	__dtraceenabled_slablist___slab_set_min()
#else
#define	SLABLIST_SLAB_SET_MIN_ENABLED() \
	__dtraceenabled_slablist___slab_set_min(0)
#endif
#define	SLABLIST_SUB_LINEAR_SCAN(arg0, arg1) \
	__dtrace_slablist___sub_linear_scan(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SUB_LINEAR_SCAN_ENABLED() \
	__dtraceenabled_slablist___sub_linear_scan()
#else
#define	SLABLIST_SUB_LINEAR_SCAN_ENABLED() \
	__dtraceenabled_slablist___sub_linear_scan(0)
#endif
#define	SLABLIST_SUB_LINEAR_SCAN_BEGIN(arg0) \
	__dtrace_slablist___sub_linear_scan_begin(arg0)
#ifndef	__sparc
#define	SLABLIST_SUB_LINEAR_SCAN_BEGIN_ENABLED() \
	__dtraceenabled_slablist___sub_linear_scan_begin()
#else
#define	SLABLIST_SUB_LINEAR_SCAN_BEGIN_ENABLED() \
	__dtraceenabled_slablist___sub_linear_scan_begin(0)
#endif
#define	SLABLIST_SUB_LINEAR_SCAN_END(arg0) \
	__dtrace_slablist___sub_linear_scan_end(arg0)
#ifndef	__sparc
#define	SLABLIST_SUB_LINEAR_SCAN_END_ENABLED() \
	__dtraceenabled_slablist___sub_linear_scan_end()
#else
#define	SLABLIST_SUB_LINEAR_SCAN_END_ENABLED() \
	__dtraceenabled_slablist___sub_linear_scan_end(0)
#endif
#define	SLABLIST_SUBBWDSHIFT_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___subbwdshift_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SUBBWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___subbwdshift_begin()
#else
#define	SLABLIST_SUBBWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___subbwdshift_begin(0)
#endif
#define	SLABLIST_SUBBWDSHIFT_END() \
	__dtrace_slablist___subbwdshift_end()
#ifndef	__sparc
#define	SLABLIST_SUBBWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___subbwdshift_end()
#else
#define	SLABLIST_SUBBWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___subbwdshift_end(0)
#endif
#define	SLABLIST_SUBFWDSHIFT_BEGIN(arg0, arg1, arg2) \
	__dtrace_slablist___subfwdshift_begin(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SUBFWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___subfwdshift_begin()
#else
#define	SLABLIST_SUBFWDSHIFT_BEGIN_ENABLED() \
	__dtraceenabled_slablist___subfwdshift_begin(0)
#endif
#define	SLABLIST_SUBFWDSHIFT_END() \
	__dtrace_slablist___subfwdshift_end()
#ifndef	__sparc
#define	SLABLIST_SUBFWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___subfwdshift_end()
#else
#define	SLABLIST_SUBFWDSHIFT_END_ENABLED() \
	__dtraceenabled_slablist___subfwdshift_end(0)
#endif
#define	SLABLIST_SUBSLAB_AA(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_aa(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AA_ENABLED() \
	__dtraceenabled_slablist___subslab_aa()
#else
#define	SLABLIST_SUBSLAB_AA_ENABLED() \
	__dtraceenabled_slablist___subslab_aa(0)
#endif
#define	SLABLIST_SUBSLAB_AAM(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_aam(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AAM_ENABLED() \
	__dtraceenabled_slablist___subslab_aam()
#else
#define	SLABLIST_SUBSLAB_AAM_ENABLED() \
	__dtraceenabled_slablist___subslab_aam(0)
#endif
#define	SLABLIST_SUBSLAB_AB(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_ab(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AB_ENABLED() \
	__dtraceenabled_slablist___subslab_ab()
#else
#define	SLABLIST_SUBSLAB_AB_ENABLED() \
	__dtraceenabled_slablist___subslab_ab(0)
#endif
#define	SLABLIST_SUBSLAB_ABM(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_abm(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_ABM_ENABLED() \
	__dtraceenabled_slablist___subslab_abm()
#else
#define	SLABLIST_SUBSLAB_ABM_ENABLED() \
	__dtraceenabled_slablist___subslab_abm(0)
#endif
#define	SLABLIST_SUBSLAB_AI(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_ai(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AI_ENABLED() \
	__dtraceenabled_slablist___subslab_ai()
#else
#define	SLABLIST_SUBSLAB_AI_ENABLED() \
	__dtraceenabled_slablist___subslab_ai(0)
#endif
#define	SLABLIST_SUBSLAB_AISN(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_aisn(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AISN_ENABLED() \
	__dtraceenabled_slablist___subslab_aisn()
#else
#define	SLABLIST_SUBSLAB_AISN_ENABLED() \
	__dtraceenabled_slablist___subslab_aisn(0)
#endif
#define	SLABLIST_SUBSLAB_AISNM(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_aisnm(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AISNM_ENABLED() \
	__dtraceenabled_slablist___subslab_aisnm()
#else
#define	SLABLIST_SUBSLAB_AISNM_ENABLED() \
	__dtraceenabled_slablist___subslab_aisnm(0)
#endif
#define	SLABLIST_SUBSLAB_AISP(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_aisp(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AISP_ENABLED() \
	__dtraceenabled_slablist___subslab_aisp()
#else
#define	SLABLIST_SUBSLAB_AISP_ENABLED() \
	__dtraceenabled_slablist___subslab_aisp(0)
#endif
#define	SLABLIST_SUBSLAB_AISPM(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___subslab_aispm(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_AISPM_ENABLED() \
	__dtraceenabled_slablist___subslab_aispm()
#else
#define	SLABLIST_SUBSLAB_AISPM_ENABLED() \
	__dtraceenabled_slablist___subslab_aispm(0)
#endif
#define	SLABLIST_SUBSLAB_BIN_SRCH(arg0, arg1) \
	__dtrace_slablist___subslab_bin_srch(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___subslab_bin_srch()
#else
#define	SLABLIST_SUBSLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___subslab_bin_srch(0)
#endif
#define	SLABLIST_SUBSLAB_BIN_SRCH_TOP(arg0, arg1) \
	__dtrace_slablist___subslab_bin_srch_top(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_BIN_SRCH_TOP_ENABLED() \
	__dtraceenabled_slablist___subslab_bin_srch_top()
#else
#define	SLABLIST_SUBSLAB_BIN_SRCH_TOP_ENABLED() \
	__dtraceenabled_slablist___subslab_bin_srch_top(0)
#endif
#define	SLABLIST_SUBSLAB_DEC_ELEMS(arg0) \
	__dtrace_slablist___subslab_dec_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___subslab_dec_elems()
#else
#define	SLABLIST_SUBSLAB_DEC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___subslab_dec_elems(0)
#endif
#define	SLABLIST_SUBSLAB_INC_ELEMS(arg0) \
	__dtrace_slablist___subslab_inc_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___subslab_inc_elems()
#else
#define	SLABLIST_SUBSLAB_INC_ELEMS_ENABLED() \
	__dtraceenabled_slablist___subslab_inc_elems(0)
#endif
#define	SLABLIST_SUBSLAB_MK(arg0) \
	__dtrace_slablist___subslab_mk(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_MK_ENABLED() \
	__dtraceenabled_slablist___subslab_mk()
#else
#define	SLABLIST_SUBSLAB_MK_ENABLED() \
	__dtraceenabled_slablist___subslab_mk(0)
#endif
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_NEXT(arg0, arg1, arg2) \
	__dtrace_slablist___subslab_move_mid_to_next(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___subslab_move_mid_to_next()
#else
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_NEXT_ENABLED() \
	__dtraceenabled_slablist___subslab_move_mid_to_next(0)
#endif
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_PREV(arg0, arg1, arg2) \
	__dtrace_slablist___subslab_move_mid_to_prev(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___subslab_move_mid_to_prev()
#else
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_PREV_ENABLED() \
	__dtraceenabled_slablist___subslab_move_mid_to_prev(0)
#endif
#define	SLABLIST_SUBSLAB_MOVE_NEXT_TO_MID(arg0, arg1, arg2) \
	__dtrace_slablist___subslab_move_next_to_mid(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_MOVE_NEXT_TO_MID_ENABLED() \
	__dtraceenabled_slablist___subslab_move_next_to_mid()
#else
#define	SLABLIST_SUBSLAB_MOVE_NEXT_TO_MID_ENABLED() \
	__dtraceenabled_slablist___subslab_move_next_to_mid(0)
#endif
#define	SLABLIST_SUBSLAB_MOVE_PREV_TO_MID(arg0, arg1, arg2) \
	__dtrace_slablist___subslab_move_prev_to_mid(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_MOVE_PREV_TO_MID_ENABLED() \
	__dtraceenabled_slablist___subslab_move_prev_to_mid()
#else
#define	SLABLIST_SUBSLAB_MOVE_PREV_TO_MID_ENABLED() \
	__dtraceenabled_slablist___subslab_move_prev_to_mid(0)
#endif
#define	SLABLIST_SUBSLAB_RM(arg0) \
	__dtrace_slablist___subslab_rm(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_RM_ENABLED() \
	__dtraceenabled_slablist___subslab_rm()
#else
#define	SLABLIST_SUBSLAB_RM_ENABLED() \
	__dtraceenabled_slablist___subslab_rm(0)
#endif
#define	SLABLIST_SUBSLAB_SET_BELOW(arg0) \
	__dtrace_slablist___subslab_set_below(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_SET_BELOW_ENABLED() \
	__dtraceenabled_slablist___subslab_set_below()
#else
#define	SLABLIST_SUBSLAB_SET_BELOW_ENABLED() \
	__dtraceenabled_slablist___subslab_set_below(0)
#endif
#define	SLABLIST_SUBSLAB_SET_MAX(arg0) \
	__dtrace_slablist___subslab_set_max(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_SET_MAX_ENABLED() \
	__dtraceenabled_slablist___subslab_set_max()
#else
#define	SLABLIST_SUBSLAB_SET_MAX_ENABLED() \
	__dtraceenabled_slablist___subslab_set_max(0)
#endif
#define	SLABLIST_SUBSLAB_SET_MIN(arg0) \
	__dtrace_slablist___subslab_set_min(arg0)
#ifndef	__sparc
#define	SLABLIST_SUBSLAB_SET_MIN_ENABLED() \
	__dtraceenabled_slablist___subslab_set_min()
#else
#define	SLABLIST_SUBSLAB_SET_MIN_ENABLED() \
	__dtraceenabled_slablist___subslab_set_min(0)
#endif
#define	SLABLIST_SUM_USR_ELEMS(arg0) \
	__dtrace_slablist___sum_usr_elems(arg0)
#ifndef	__sparc
#define	SLABLIST_SUM_USR_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sum_usr_elems()
#else
#define	SLABLIST_SUM_USR_ELEMS_ENABLED() \
	__dtraceenabled_slablist___sum_usr_elems(0)
#endif
#define	SLABLIST_TEST_ADD_ELEM(arg0, arg1, arg2, arg3) \
	__dtrace_slablist___test_add_elem(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	SLABLIST_TEST_ADD_ELEM_ENABLED() \
	__dtraceenabled_slablist___test_add_elem()
#else
#define	SLABLIST_TEST_ADD_ELEM_ENABLED() \
	__dtraceenabled_slablist___test_add_elem(0)
#endif
#define	SLABLIST_TEST_ADD_SLAB(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_slablist___test_add_slab(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	SLABLIST_TEST_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___test_add_slab()
#else
#define	SLABLIST_TEST_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___test_add_slab(0)
#endif
#define	SLABLIST_TEST_BREAD_CRUMBS(arg0, arg1) \
	__dtrace_slablist___test_bread_crumbs(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_BREAD_CRUMBS_ENABLED() \
	__dtraceenabled_slablist___test_bread_crumbs()
#else
#define	SLABLIST_TEST_BREAD_CRUMBS_ENABLED() \
	__dtraceenabled_slablist___test_bread_crumbs(0)
#endif
#define	SLABLIST_TEST_FIND_BUBBLE_UP(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_slablist___test_find_bubble_up(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	SLABLIST_TEST_FIND_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___test_find_bubble_up()
#else
#define	SLABLIST_TEST_FIND_BUBBLE_UP_ENABLED() \
	__dtraceenabled_slablist___test_find_bubble_up(0)
#endif
#define	SLABLIST_TEST_GET_ELEM_POS(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_slablist___test_get_elem_pos(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	SLABLIST_TEST_GET_ELEM_POS_ENABLED() \
	__dtraceenabled_slablist___test_get_elem_pos()
#else
#define	SLABLIST_TEST_GET_ELEM_POS_ENABLED() \
	__dtraceenabled_slablist___test_get_elem_pos(0)
#endif
#define	SLABLIST_TEST_IS_SLAB_LIST(arg0) \
	__dtrace_slablist___test_is_slab_list(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_IS_SLAB_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_slab_list()
#else
#define	SLABLIST_TEST_IS_SLAB_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_slab_list(0)
#endif
#define	SLABLIST_TEST_IS_SML_LIST(arg0) \
	__dtrace_slablist___test_is_sml_list(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_IS_SML_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_sml_list()
#else
#define	SLABLIST_TEST_IS_SML_LIST_ENABLED() \
	__dtraceenabled_slablist___test_is_sml_list(0)
#endif
#define	SLABLIST_TEST_REM_RANGE(arg0, arg1, arg2) \
	__dtrace_slablist___test_rem_range(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_REM_RANGE_ENABLED() \
	__dtraceenabled_slablist___test_rem_range()
#else
#define	SLABLIST_TEST_REM_RANGE_ENABLED() \
	__dtraceenabled_slablist___test_rem_range(0)
#endif
#define	SLABLIST_TEST_REMOVE_ELEM(arg0, arg1, arg2) \
	__dtrace_slablist___test_remove_elem(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_REMOVE_ELEM_ENABLED() \
	__dtraceenabled_slablist___test_remove_elem()
#else
#define	SLABLIST_TEST_REMOVE_ELEM_ENABLED() \
	__dtraceenabled_slablist___test_remove_elem(0)
#endif
#define	SLABLIST_TEST_REMOVE_SLAB(arg0, arg1, arg2) \
	__dtrace_slablist___test_remove_slab(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_REMOVE_SLAB_ENABLED() \
	__dtraceenabled_slablist___test_remove_slab()
#else
#define	SLABLIST_TEST_REMOVE_SLAB_ENABLED() \
	__dtraceenabled_slablist___test_remove_slab(0)
#endif
#define	SLABLIST_TEST_RIPPLE_ADD_SLAB(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_slablist___test_ripple_add_slab(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	SLABLIST_TEST_RIPPLE_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___test_ripple_add_slab()
#else
#define	SLABLIST_TEST_RIPPLE_ADD_SLAB_ENABLED() \
	__dtraceenabled_slablist___test_ripple_add_slab(0)
#endif
#define	SLABLIST_TEST_RIPPLE_ADD_SUBSLAB(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_slablist___test_ripple_add_subslab(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	SLABLIST_TEST_RIPPLE_ADD_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___test_ripple_add_subslab()
#else
#define	SLABLIST_TEST_RIPPLE_ADD_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___test_ripple_add_subslab(0)
#endif
#define	SLABLIST_TEST_RIPPLE_UPDATE_EXTREMA(arg0, arg1) \
	__dtrace_slablist___test_ripple_update_extrema(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_TEST_RIPPLE_UPDATE_EXTREMA_ENABLED() \
	__dtraceenabled_slablist___test_ripple_update_extrema()
#else
#define	SLABLIST_TEST_RIPPLE_UPDATE_EXTREMA_ENABLED() \
	__dtraceenabled_slablist___test_ripple_update_extrema(0)
#endif
#define	SLABLIST_TEST_SLAB_BIN_SRCH(arg0, arg1, arg2) \
	__dtrace_slablist___test_slab_bin_srch(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___test_slab_bin_srch()
#else
#define	SLABLIST_TEST_SLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___test_slab_bin_srch(0)
#endif
#define	SLABLIST_TEST_SLAB_MOVE_NEXT(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___test_slab_move_next(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_MOVE_NEXT_ENABLED() \
	__dtraceenabled_slablist___test_slab_move_next()
#else
#define	SLABLIST_TEST_SLAB_MOVE_NEXT_ENABLED() \
	__dtraceenabled_slablist___test_slab_move_next(0)
#endif
#define	SLABLIST_TEST_SLAB_MOVE_PREV(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___test_slab_move_prev(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_MOVE_PREV_ENABLED() \
	__dtraceenabled_slablist___test_slab_move_prev()
#else
#define	SLABLIST_TEST_SLAB_MOVE_PREV_ENABLED() \
	__dtraceenabled_slablist___test_slab_move_prev(0)
#endif
#define	SLABLIST_TEST_SLAB_TO_SML(arg0) \
	__dtrace_slablist___test_slab_to_sml(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SLAB_TO_SML_ENABLED() \
	__dtraceenabled_slablist___test_slab_to_sml()
#else
#define	SLABLIST_TEST_SLAB_TO_SML_ENABLED() \
	__dtraceenabled_slablist___test_slab_to_sml(0)
#endif
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED(arg0) \
	__dtrace_slablist___test_smlist_elems_sorted(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_smlist_elems_sorted()
#else
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED_ENABLED() \
	__dtraceenabled_slablist___test_smlist_elems_sorted(0)
#endif
#define	SLABLIST_TEST_SMLIST_NELEMS(arg0) \
	__dtrace_slablist___test_smlist_nelems(arg0)
#ifndef	__sparc
#define	SLABLIST_TEST_SMLIST_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_smlist_nelems()
#else
#define	SLABLIST_TEST_SMLIST_NELEMS_ENABLED() \
	__dtraceenabled_slablist___test_smlist_nelems(0)
#endif
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH(arg0, arg1, arg2) \
	__dtrace_slablist___test_subslab_bin_srch(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___test_subslab_bin_srch()
#else
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_ENABLED() \
	__dtraceenabled_slablist___test_subslab_bin_srch(0)
#endif
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_TOP(arg0, arg1, arg2) \
	__dtrace_slablist___test_subslab_bin_srch_top(arg0, arg1, arg2)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_TOP_ENABLED() \
	__dtraceenabled_slablist___test_subslab_bin_srch_top()
#else
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_TOP_ENABLED() \
	__dtraceenabled_slablist___test_subslab_bin_srch_top(0)
#endif
#define	SLABLIST_TEST_SUBSLAB_MOVE_NEXT(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___test_subslab_move_next(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBSLAB_MOVE_NEXT_ENABLED() \
	__dtraceenabled_slablist___test_subslab_move_next()
#else
#define	SLABLIST_TEST_SUBSLAB_MOVE_NEXT_ENABLED() \
	__dtraceenabled_slablist___test_subslab_move_next(0)
#endif
#define	SLABLIST_TEST_SUBSLAB_MOVE_PREV(arg0, arg1, arg2, arg3, arg4, arg5) \
	__dtrace_slablist___test_subslab_move_prev(arg0, arg1, arg2, arg3, arg4, arg5)
#ifndef	__sparc
#define	SLABLIST_TEST_SUBSLAB_MOVE_PREV_ENABLED() \
	__dtraceenabled_slablist___test_subslab_move_prev()
#else
#define	SLABLIST_TEST_SUBSLAB_MOVE_PREV_ENABLED() \
	__dtraceenabled_slablist___test_subslab_move_prev(0)
#endif
#define	SLABLIST_TO_SLAB(arg0) \
	__dtrace_slablist___to_slab(arg0)
#ifndef	__sparc
#define	SLABLIST_TO_SLAB_ENABLED() \
	__dtraceenabled_slablist___to_slab()
#else
#define	SLABLIST_TO_SLAB_ENABLED() \
	__dtraceenabled_slablist___to_slab(0)
#endif
#define	SLABLIST_TO_SMALL_LIST(arg0) \
	__dtrace_slablist___to_small_list(arg0)
#ifndef	__sparc
#define	SLABLIST_TO_SMALL_LIST_ENABLED() \
	__dtraceenabled_slablist___to_small_list()
#else
#define	SLABLIST_TO_SMALL_LIST_ENABLED() \
	__dtraceenabled_slablist___to_small_list(0)
#endif
#define	SLABLIST_UNLINK_SLAB(arg0, arg1) \
	__dtrace_slablist___unlink_slab(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_UNLINK_SLAB_ENABLED() \
	__dtraceenabled_slablist___unlink_slab()
#else
#define	SLABLIST_UNLINK_SLAB_ENABLED() \
	__dtraceenabled_slablist___unlink_slab(0)
#endif
#define	SLABLIST_UNLINK_SML_NODE(arg0) \
	__dtrace_slablist___unlink_sml_node(arg0)
#ifndef	__sparc
#define	SLABLIST_UNLINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___unlink_sml_node()
#else
#define	SLABLIST_UNLINK_SML_NODE_ENABLED() \
	__dtraceenabled_slablist___unlink_sml_node(0)
#endif
#define	SLABLIST_UNLINK_SUBSLAB(arg0, arg1) \
	__dtrace_slablist___unlink_subslab(arg0, arg1)
#ifndef	__sparc
#define	SLABLIST_UNLINK_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___unlink_subslab()
#else
#define	SLABLIST_UNLINK_SUBSLAB_ENABLED() \
	__dtraceenabled_slablist___unlink_subslab(0)
#endif


extern void __dtrace_slablist___add_begin(slablist_t *, slablist_elem_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_begin(void);
#else
extern int __dtraceenabled_slablist___add_begin(long);
#endif
extern void __dtrace_slablist___add_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___add_end(void);
#else
extern int __dtraceenabled_slablist___add_end(long);
#endif
extern void __dtrace_slablist___attach_sublayer(slablist_t *, slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___attach_sublayer(void);
#else
extern int __dtraceenabled_slablist___attach_sublayer(long);
#endif
extern void __dtrace_slablist___bin_search(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bin_search(void);
#else
extern int __dtraceenabled_slablist___bin_search(long);
#endif
extern void __dtrace_slablist___bin_search_loop(int, int, int, int, int, void *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bin_search_loop(void);
#else
extern int __dtraceenabled_slablist___bin_search_loop(long);
#endif
extern void __dtrace_slablist___bubble_up(slablist_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up(void);
#else
extern int __dtraceenabled_slablist___bubble_up(long);
#endif
extern void __dtrace_slablist___bubble_up_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up_begin(void);
#else
extern int __dtraceenabled_slablist___bubble_up_begin(long);
#endif
extern void __dtrace_slablist___bubble_up_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up_end(void);
#else
extern int __dtraceenabled_slablist___bubble_up_end(long);
#endif
extern void __dtrace_slablist___bubble_up_top(slablist_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bubble_up_top(void);
#else
extern int __dtraceenabled_slablist___bubble_up_top(long);
#endif
extern void __dtrace_slablist___bwdshift_begin(slablist_t *, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bwdshift_begin(void);
#else
extern int __dtraceenabled_slablist___bwdshift_begin(long);
#endif
extern void __dtrace_slablist___bwdshift_end(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___bwdshift_end(void);
#else
extern int __dtraceenabled_slablist___bwdshift_end(long);
#endif
extern void __dtrace_slablist___create(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___create(void);
#else
extern int __dtraceenabled_slablist___create(long);
#endif
extern void __dtrace_slablist___destroy(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___destroy(void);
#else
extern int __dtraceenabled_slablist___destroy(long);
#endif
extern void __dtrace_slablist___detach_sublayer(slablist_t *, slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___detach_sublayer(void);
#else
extern int __dtraceenabled_slablist___detach_sublayer(long);
#endif
extern void __dtrace_slablist___extreme_slab(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___extreme_slab(void);
#else
extern int __dtraceenabled_slablist___extreme_slab(long);
#endif
extern void __dtrace_slablist___find_begin(slablist_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_begin(void);
#else
extern int __dtraceenabled_slablist___find_begin(long);
#endif
extern void __dtrace_slablist___find_end(int, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_end(void);
#else
extern int __dtraceenabled_slablist___find_end(long);
#endif
extern void __dtrace_slablist___find_slab_pos_begin(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_slab_pos_begin(void);
#else
extern int __dtraceenabled_slablist___find_slab_pos_begin(long);
#endif
extern void __dtrace_slablist___find_slab_pos_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___find_slab_pos_end(void);
#else
extern int __dtraceenabled_slablist___find_slab_pos_end(long);
#endif
extern void __dtrace_slablist___foldl_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___foldl_begin(void);
#else
extern int __dtraceenabled_slablist___foldl_begin(long);
#endif
extern void __dtrace_slablist___foldl_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___foldl_end(void);
#else
extern int __dtraceenabled_slablist___foldl_end(long);
#endif
extern void __dtrace_slablist___foldr_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___foldr_begin(void);
#else
extern int __dtraceenabled_slablist___foldr_begin(long);
#endif
extern void __dtrace_slablist___foldr_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___foldr_end(void);
#else
extern int __dtraceenabled_slablist___foldr_end(long);
#endif
extern void __dtrace_slablist___fwdshift_begin(slablist_t *, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___fwdshift_begin(void);
#else
extern int __dtraceenabled_slablist___fwdshift_begin(long);
#endif
extern void __dtrace_slablist___fwdshift_end(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___fwdshift_end(void);
#else
extern int __dtraceenabled_slablist___fwdshift_end(long);
#endif
extern void __dtrace_slablist___get_pos_base_walk(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_pos_base_walk(void);
#else
extern int __dtraceenabled_slablist___get_pos_base_walk(long);
#endif
extern void __dtrace_slablist___get_pos_begin(slablist_t *, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_pos_begin(void);
#else
extern int __dtraceenabled_slablist___get_pos_begin(long);
#endif
extern void __dtrace_slablist___get_pos_end(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_pos_end(void);
#else
extern int __dtraceenabled_slablist___get_pos_end(long);
#endif
extern void __dtrace_slablist___get_pos_shallow(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_pos_shallow(void);
#else
extern int __dtraceenabled_slablist___get_pos_shallow(long);
#endif
extern void __dtrace_slablist___get_pos_sub_walk(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_pos_sub_walk(void);
#else
extern int __dtraceenabled_slablist___get_pos_sub_walk(long);
#endif
extern void __dtrace_slablist___get_pos_top_walk(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___get_pos_top_walk(void);
#else
extern int __dtraceenabled_slablist___get_pos_top_walk(long);
#endif
extern void __dtrace_slablist___got_here(uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___got_here(void);
#else
extern int __dtraceenabled_slablist___got_here(long);
#endif
extern void __dtrace_slablist___linear_scan(slablist_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___linear_scan(void);
#else
extern int __dtraceenabled_slablist___linear_scan(long);
#endif
extern void __dtrace_slablist___linear_scan_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___linear_scan_begin(void);
#else
extern int __dtraceenabled_slablist___linear_scan_begin(long);
#endif
extern void __dtrace_slablist___linear_scan_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___linear_scan_end(void);
#else
extern int __dtraceenabled_slablist___linear_scan_end(long);
#endif
extern void __dtrace_slablist___link_slab_after(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_slab_after(void);
#else
extern int __dtraceenabled_slablist___link_slab_after(long);
#endif
extern void __dtrace_slablist___link_slab_before(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_slab_before(void);
#else
extern int __dtraceenabled_slablist___link_slab_before(long);
#endif
extern void __dtrace_slablist___link_sml_node(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_sml_node(void);
#else
extern int __dtraceenabled_slablist___link_sml_node(long);
#endif
extern void __dtrace_slablist___link_subslab_after(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_subslab_after(void);
#else
extern int __dtraceenabled_slablist___link_subslab_after(long);
#endif
extern void __dtrace_slablist___link_subslab_before(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___link_subslab_before(void);
#else
extern int __dtraceenabled_slablist___link_subslab_before(long);
#endif
extern void __dtrace_slablist___map_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___map_begin(void);
#else
extern int __dtraceenabled_slablist___map_begin(long);
#endif
extern void __dtrace_slablist___map_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___map_end(void);
#else
extern int __dtraceenabled_slablist___map_end(long);
#endif
extern void __dtrace_slablist___reap_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___reap_begin(void);
#else
extern int __dtraceenabled_slablist___reap_begin(long);
#endif
extern void __dtrace_slablist___reap_end(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___reap_end(void);
#else
extern int __dtraceenabled_slablist___reap_end(long);
#endif
extern void __dtrace_slablist___rem_begin(slablist_t *, slablist_elem_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_begin(void);
#else
extern int __dtraceenabled_slablist___rem_begin(long);
#endif
extern void __dtrace_slablist___rem_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_end(void);
#else
extern int __dtraceenabled_slablist___rem_end(long);
#endif
extern void __dtrace_slablist___rem_range_begin(slablist_t *, slablist_elem_t, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_range_begin(void);
#else
extern int __dtraceenabled_slablist___rem_range_begin(long);
#endif
extern void __dtrace_slablist___rem_range_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___rem_range_end(void);
#else
extern int __dtraceenabled_slablist___rem_range_end(long);
#endif
extern void __dtrace_slablist___ripple_add_slab(slablist_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___ripple_add_slab(void);
#else
extern int __dtraceenabled_slablist___ripple_add_slab(long);
#endif
extern void __dtrace_slablist___ripple_add_subslab(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___ripple_add_subslab(void);
#else
extern int __dtraceenabled_slablist___ripple_add_subslab(long);
#endif
extern void __dtrace_slablist___ripple_rem_slab(slablist_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___ripple_rem_slab(void);
#else
extern int __dtraceenabled_slablist___ripple_rem_slab(long);
#endif
extern void __dtrace_slablist___ripple_rem_subslab(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___ripple_rem_subslab(void);
#else
extern int __dtraceenabled_slablist___ripple_rem_subslab(long);
#endif
extern void __dtrace_slablist___set_crumb(slablist_t *, subslab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___set_crumb(void);
#else
extern int __dtraceenabled_slablist___set_crumb(long);
#endif
extern void __dtrace_slablist___set_end(slablist_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___set_end(void);
#else
extern int __dtraceenabled_slablist___set_end(long);
#endif
extern void __dtrace_slablist___set_head(slablist_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___set_head(void);
#else
extern int __dtraceenabled_slablist___set_head(long);
#endif
extern void __dtrace_slablist___set_usr_elems(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___set_usr_elems(void);
#else
extern int __dtraceenabled_slablist___set_usr_elems(long);
#endif
extern void __dtrace_slablist___sl_dec_elems(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_dec_elems(void);
#else
extern int __dtraceenabled_slablist___sl_dec_elems(long);
#endif
extern void __dtrace_slablist___sl_dec_slabs(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_dec_slabs(void);
#else
extern int __dtraceenabled_slablist___sl_dec_slabs(long);
#endif
extern void __dtrace_slablist___sl_dec_subslabs(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_dec_subslabs(void);
#else
extern int __dtraceenabled_slablist___sl_dec_subslabs(long);
#endif
extern void __dtrace_slablist___sl_inc_elems(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_elems(void);
#else
extern int __dtraceenabled_slablist___sl_inc_elems(long);
#endif
extern void __dtrace_slablist___sl_inc_layer(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_layer(void);
#else
extern int __dtraceenabled_slablist___sl_inc_layer(long);
#endif
extern void __dtrace_slablist___sl_inc_slabs(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_slabs(void);
#else
extern int __dtraceenabled_slablist___sl_inc_slabs(long);
#endif
extern void __dtrace_slablist___sl_inc_sublayers(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_sublayers(void);
#else
extern int __dtraceenabled_slablist___sl_inc_sublayers(long);
#endif
extern void __dtrace_slablist___sl_inc_subslabs(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sl_inc_subslabs(void);
#else
extern int __dtraceenabled_slablist___sl_inc_subslabs(long);
#endif
extern void __dtrace_slablist___slab_aa(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_aa(void);
#else
extern int __dtraceenabled_slablist___slab_aa(long);
#endif
extern void __dtrace_slablist___slab_aam(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_aam(void);
#else
extern int __dtraceenabled_slablist___slab_aam(long);
#endif
extern void __dtrace_slablist___slab_ab(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_ab(void);
#else
extern int __dtraceenabled_slablist___slab_ab(long);
#endif
extern void __dtrace_slablist___slab_abm(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_abm(void);
#else
extern int __dtraceenabled_slablist___slab_abm(long);
#endif
extern void __dtrace_slablist___slab_ai(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_ai(void);
#else
extern int __dtraceenabled_slablist___slab_ai(long);
#endif
extern void __dtrace_slablist___slab_aisn(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_aisn(void);
#else
extern int __dtraceenabled_slablist___slab_aisn(long);
#endif
extern void __dtrace_slablist___slab_aisnm(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_aisnm(void);
#else
extern int __dtraceenabled_slablist___slab_aisnm(long);
#endif
extern void __dtrace_slablist___slab_aisp(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_aisp(void);
#else
extern int __dtraceenabled_slablist___slab_aisp(long);
#endif
extern void __dtrace_slablist___slab_aispm(slablist_t *, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_aispm(void);
#else
extern int __dtraceenabled_slablist___slab_aispm(long);
#endif
extern void __dtrace_slablist___slab_ar(slablist_t *, slab_t *, slablist_elem_t, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_ar(void);
#else
extern int __dtraceenabled_slablist___slab_ar(long);
#endif
extern void __dtrace_slablist___slab_bin_srch(slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_bin_srch(void);
#else
extern int __dtraceenabled_slablist___slab_bin_srch(long);
#endif
extern void __dtrace_slablist___slab_dec_elems(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_dec_elems(void);
#else
extern int __dtraceenabled_slablist___slab_dec_elems(long);
#endif
extern void __dtrace_slablist___slab_inc_elems(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_inc_elems(void);
#else
extern int __dtraceenabled_slablist___slab_inc_elems(long);
#endif
extern void __dtrace_slablist___slab_mk(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_mk(void);
#else
extern int __dtraceenabled_slablist___slab_mk(long);
#endif
extern void __dtrace_slablist___slab_move_mid_to_next(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_move_mid_to_next(void);
#else
extern int __dtraceenabled_slablist___slab_move_mid_to_next(long);
#endif
extern void __dtrace_slablist___slab_move_mid_to_prev(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_move_mid_to_prev(void);
#else
extern int __dtraceenabled_slablist___slab_move_mid_to_prev(long);
#endif
extern void __dtrace_slablist___slab_move_next_to_mid(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_move_next_to_mid(void);
#else
extern int __dtraceenabled_slablist___slab_move_next_to_mid(long);
#endif
extern void __dtrace_slablist___slab_move_prev_to_mid(slablist_t *, slab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_move_prev_to_mid(void);
#else
extern int __dtraceenabled_slablist___slab_move_prev_to_mid(long);
#endif
extern void __dtrace_slablist___slab_rm(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_rm(void);
#else
extern int __dtraceenabled_slablist___slab_rm(long);
#endif
extern void __dtrace_slablist___slab_set_below(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_set_below(void);
#else
extern int __dtraceenabled_slablist___slab_set_below(long);
#endif
extern void __dtrace_slablist___slab_set_max(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_set_max(void);
#else
extern int __dtraceenabled_slablist___slab_set_max(long);
#endif
extern void __dtrace_slablist___slab_set_min(slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___slab_set_min(void);
#else
extern int __dtraceenabled_slablist___slab_set_min(long);
#endif
extern void __dtrace_slablist___sub_linear_scan(slablist_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sub_linear_scan(void);
#else
extern int __dtraceenabled_slablist___sub_linear_scan(long);
#endif
extern void __dtrace_slablist___sub_linear_scan_begin(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sub_linear_scan_begin(void);
#else
extern int __dtraceenabled_slablist___sub_linear_scan_begin(long);
#endif
extern void __dtrace_slablist___sub_linear_scan_end(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sub_linear_scan_end(void);
#else
extern int __dtraceenabled_slablist___sub_linear_scan_end(long);
#endif
extern void __dtrace_slablist___subbwdshift_begin(slablist_t *, subslab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subbwdshift_begin(void);
#else
extern int __dtraceenabled_slablist___subbwdshift_begin(long);
#endif
extern void __dtrace_slablist___subbwdshift_end(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subbwdshift_end(void);
#else
extern int __dtraceenabled_slablist___subbwdshift_end(long);
#endif
extern void __dtrace_slablist___subfwdshift_begin(slablist_t *, subslab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subfwdshift_begin(void);
#else
extern int __dtraceenabled_slablist___subfwdshift_begin(long);
#endif
extern void __dtrace_slablist___subfwdshift_end(void);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subfwdshift_end(void);
#else
extern int __dtraceenabled_slablist___subfwdshift_end(long);
#endif
extern void __dtrace_slablist___subslab_aa(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_aa(void);
#else
extern int __dtraceenabled_slablist___subslab_aa(long);
#endif
extern void __dtrace_slablist___subslab_aam(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_aam(void);
#else
extern int __dtraceenabled_slablist___subslab_aam(long);
#endif
extern void __dtrace_slablist___subslab_ab(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_ab(void);
#else
extern int __dtraceenabled_slablist___subslab_ab(long);
#endif
extern void __dtrace_slablist___subslab_abm(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_abm(void);
#else
extern int __dtraceenabled_slablist___subslab_abm(long);
#endif
extern void __dtrace_slablist___subslab_ai(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_ai(void);
#else
extern int __dtraceenabled_slablist___subslab_ai(long);
#endif
extern void __dtrace_slablist___subslab_aisn(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_aisn(void);
#else
extern int __dtraceenabled_slablist___subslab_aisn(long);
#endif
extern void __dtrace_slablist___subslab_aisnm(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_aisnm(void);
#else
extern int __dtraceenabled_slablist___subslab_aisnm(long);
#endif
extern void __dtrace_slablist___subslab_aisp(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_aisp(void);
#else
extern int __dtraceenabled_slablist___subslab_aisp(long);
#endif
extern void __dtrace_slablist___subslab_aispm(slablist_t *, subslab_t *, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_aispm(void);
#else
extern int __dtraceenabled_slablist___subslab_aispm(long);
#endif
extern void __dtrace_slablist___subslab_bin_srch(subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_bin_srch(void);
#else
extern int __dtraceenabled_slablist___subslab_bin_srch(long);
#endif
extern void __dtrace_slablist___subslab_bin_srch_top(subslab_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_bin_srch_top(void);
#else
extern int __dtraceenabled_slablist___subslab_bin_srch_top(long);
#endif
extern void __dtrace_slablist___subslab_dec_elems(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_dec_elems(void);
#else
extern int __dtraceenabled_slablist___subslab_dec_elems(long);
#endif
extern void __dtrace_slablist___subslab_inc_elems(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_inc_elems(void);
#else
extern int __dtraceenabled_slablist___subslab_inc_elems(long);
#endif
extern void __dtrace_slablist___subslab_mk(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_mk(void);
#else
extern int __dtraceenabled_slablist___subslab_mk(long);
#endif
extern void __dtrace_slablist___subslab_move_mid_to_next(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_move_mid_to_next(void);
#else
extern int __dtraceenabled_slablist___subslab_move_mid_to_next(long);
#endif
extern void __dtrace_slablist___subslab_move_mid_to_prev(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_move_mid_to_prev(void);
#else
extern int __dtraceenabled_slablist___subslab_move_mid_to_prev(long);
#endif
extern void __dtrace_slablist___subslab_move_next_to_mid(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_move_next_to_mid(void);
#else
extern int __dtraceenabled_slablist___subslab_move_next_to_mid(long);
#endif
extern void __dtrace_slablist___subslab_move_prev_to_mid(slablist_t *, subslab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_move_prev_to_mid(void);
#else
extern int __dtraceenabled_slablist___subslab_move_prev_to_mid(long);
#endif
extern void __dtrace_slablist___subslab_rm(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_rm(void);
#else
extern int __dtraceenabled_slablist___subslab_rm(long);
#endif
extern void __dtrace_slablist___subslab_set_below(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_set_below(void);
#else
extern int __dtraceenabled_slablist___subslab_set_below(long);
#endif
extern void __dtrace_slablist___subslab_set_max(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_set_max(void);
#else
extern int __dtraceenabled_slablist___subslab_set_max(long);
#endif
extern void __dtrace_slablist___subslab_set_min(subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___subslab_set_min(void);
#else
extern int __dtraceenabled_slablist___subslab_set_min(long);
#endif
extern void __dtrace_slablist___sum_usr_elems(uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___sum_usr_elems(void);
#else
extern int __dtraceenabled_slablist___sum_usr_elems(long);
#endif
extern void __dtrace_slablist___test_add_elem(int, slab_t *, slablist_elem_t, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_add_elem(void);
#else
extern int __dtraceenabled_slablist___test_add_elem(long);
#endif
extern void __dtrace_slablist___test_add_slab(int, subslab_t *, slab_t *, subslab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_add_slab(void);
#else
extern int __dtraceenabled_slablist___test_add_slab(long);
#endif
extern void __dtrace_slablist___test_bread_crumbs(int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_bread_crumbs(void);
#else
extern int __dtraceenabled_slablist___test_bread_crumbs(long);
#endif
extern void __dtrace_slablist___test_find_bubble_up(int, slab_t *, subslab_t *, slablist_elem_t, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_find_bubble_up(void);
#else
extern int __dtraceenabled_slablist___test_find_bubble_up(long);
#endif
extern void __dtrace_slablist___test_get_elem_pos(int, slab_t *, slab_t *, uint64_t, uint64_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_get_elem_pos(void);
#else
extern int __dtraceenabled_slablist___test_get_elem_pos(long);
#endif
extern void __dtrace_slablist___test_is_slab_list(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_is_slab_list(void);
#else
extern int __dtraceenabled_slablist___test_is_slab_list(long);
#endif
extern void __dtrace_slablist___test_is_sml_list(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_is_sml_list(void);
#else
extern int __dtraceenabled_slablist___test_is_sml_list(long);
#endif
extern void __dtrace_slablist___test_rem_range(int, slab_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_rem_range(void);
#else
extern int __dtraceenabled_slablist___test_rem_range(long);
#endif
extern void __dtrace_slablist___test_remove_elem(int, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_remove_elem(void);
#else
extern int __dtraceenabled_slablist___test_remove_elem(long);
#endif
extern void __dtrace_slablist___test_remove_slab(int, subslab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_remove_slab(void);
#else
extern int __dtraceenabled_slablist___test_remove_slab(long);
#endif
extern void __dtrace_slablist___test_ripple_add_slab(int, slab_t *, subslab_t *, void *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_ripple_add_slab(void);
#else
extern int __dtraceenabled_slablist___test_ripple_add_slab(long);
#endif
extern void __dtrace_slablist___test_ripple_add_subslab(int, subslab_t *, subslab_t *, slab_t *, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_ripple_add_subslab(void);
#else
extern int __dtraceenabled_slablist___test_ripple_add_subslab(long);
#endif
extern void __dtrace_slablist___test_ripple_update_extrema(int, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_ripple_update_extrema(void);
#else
extern int __dtraceenabled_slablist___test_ripple_update_extrema(long);
#endif
extern void __dtrace_slablist___test_slab_bin_srch(int, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_bin_srch(void);
#else
extern int __dtraceenabled_slablist___test_slab_bin_srch(long);
#endif
extern void __dtrace_slablist___test_slab_move_next(int, slab_t *, slab_t *, slab_t *, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_move_next(void);
#else
extern int __dtraceenabled_slablist___test_slab_move_next(long);
#endif
extern void __dtrace_slablist___test_slab_move_prev(int, slab_t *, slab_t *, slab_t *, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_move_prev(void);
#else
extern int __dtraceenabled_slablist___test_slab_move_prev(long);
#endif
extern void __dtrace_slablist___test_slab_to_sml(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_slab_to_sml(void);
#else
extern int __dtraceenabled_slablist___test_slab_to_sml(long);
#endif
extern void __dtrace_slablist___test_smlist_elems_sorted(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_smlist_elems_sorted(void);
#else
extern int __dtraceenabled_slablist___test_smlist_elems_sorted(long);
#endif
extern void __dtrace_slablist___test_smlist_nelems(int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_smlist_nelems(void);
#else
extern int __dtraceenabled_slablist___test_smlist_nelems(long);
#endif
extern void __dtrace_slablist___test_subslab_bin_srch(int, subslab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_subslab_bin_srch(void);
#else
extern int __dtraceenabled_slablist___test_subslab_bin_srch(long);
#endif
extern void __dtrace_slablist___test_subslab_bin_srch_top(int, slab_t *, slablist_elem_t);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_subslab_bin_srch_top(void);
#else
extern int __dtraceenabled_slablist___test_subslab_bin_srch_top(long);
#endif
extern void __dtrace_slablist___test_subslab_move_next(int, subslab_t *, subslab_t *, subslab_t *, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_subslab_move_next(void);
#else
extern int __dtraceenabled_slablist___test_subslab_move_next(long);
#endif
extern void __dtrace_slablist___test_subslab_move_prev(int, subslab_t *, subslab_t *, subslab_t *, int, int);
#ifndef	__sparc
extern int __dtraceenabled_slablist___test_subslab_move_prev(void);
#else
extern int __dtraceenabled_slablist___test_subslab_move_prev(long);
#endif
extern void __dtrace_slablist___to_slab(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___to_slab(void);
#else
extern int __dtraceenabled_slablist___to_slab(long);
#endif
extern void __dtrace_slablist___to_small_list(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___to_small_list(void);
#else
extern int __dtraceenabled_slablist___to_small_list(long);
#endif
extern void __dtrace_slablist___unlink_slab(slablist_t *, slab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___unlink_slab(void);
#else
extern int __dtraceenabled_slablist___unlink_slab(long);
#endif
extern void __dtrace_slablist___unlink_sml_node(slablist_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___unlink_sml_node(void);
#else
extern int __dtraceenabled_slablist___unlink_sml_node(long);
#endif
extern void __dtrace_slablist___unlink_subslab(slablist_t *, subslab_t *);
#ifndef	__sparc
extern int __dtraceenabled_slablist___unlink_subslab(void);
#else
extern int __dtraceenabled_slablist___unlink_subslab(long);
#endif

#else

#define	SLABLIST_ADD_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_ADD_BEGIN_ENABLED() (0)
#define	SLABLIST_ADD_END(arg0)
#define	SLABLIST_ADD_END_ENABLED() (0)
#define	SLABLIST_ATTACH_SUBLAYER(arg0, arg1)
#define	SLABLIST_ATTACH_SUBLAYER_ENABLED() (0)
#define	SLABLIST_BIN_SEARCH(arg0, arg1, arg2)
#define	SLABLIST_BIN_SEARCH_ENABLED() (0)
#define	SLABLIST_BIN_SEARCH_LOOP(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_BIN_SEARCH_LOOP_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP(arg0, arg1)
#define	SLABLIST_BUBBLE_UP_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP_BEGIN(arg0)
#define	SLABLIST_BUBBLE_UP_BEGIN_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP_END(arg0)
#define	SLABLIST_BUBBLE_UP_END_ENABLED() (0)
#define	SLABLIST_BUBBLE_UP_TOP(arg0, arg1)
#define	SLABLIST_BUBBLE_UP_TOP_ENABLED() (0)
#define	SLABLIST_BWDSHIFT_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_BWDSHIFT_BEGIN_ENABLED() (0)
#define	SLABLIST_BWDSHIFT_END()
#define	SLABLIST_BWDSHIFT_END_ENABLED() (0)
#define	SLABLIST_CREATE(arg0)
#define	SLABLIST_CREATE_ENABLED() (0)
#define	SLABLIST_DESTROY(arg0)
#define	SLABLIST_DESTROY_ENABLED() (0)
#define	SLABLIST_DETACH_SUBLAYER(arg0, arg1)
#define	SLABLIST_DETACH_SUBLAYER_ENABLED() (0)
#define	SLABLIST_EXTREME_SLAB(arg0)
#define	SLABLIST_EXTREME_SLAB_ENABLED() (0)
#define	SLABLIST_FIND_BEGIN(arg0, arg1)
#define	SLABLIST_FIND_BEGIN_ENABLED() (0)
#define	SLABLIST_FIND_END(arg0, arg1)
#define	SLABLIST_FIND_END_ENABLED() (0)
#define	SLABLIST_FIND_SLAB_POS_BEGIN(arg0)
#define	SLABLIST_FIND_SLAB_POS_BEGIN_ENABLED() (0)
#define	SLABLIST_FIND_SLAB_POS_END(arg0)
#define	SLABLIST_FIND_SLAB_POS_END_ENABLED() (0)
#define	SLABLIST_FOLDL_BEGIN(arg0)
#define	SLABLIST_FOLDL_BEGIN_ENABLED() (0)
#define	SLABLIST_FOLDL_END(arg0)
#define	SLABLIST_FOLDL_END_ENABLED() (0)
#define	SLABLIST_FOLDR_BEGIN(arg0)
#define	SLABLIST_FOLDR_BEGIN_ENABLED() (0)
#define	SLABLIST_FOLDR_END(arg0)
#define	SLABLIST_FOLDR_END_ENABLED() (0)
#define	SLABLIST_FWDSHIFT_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_FWDSHIFT_BEGIN_ENABLED() (0)
#define	SLABLIST_FWDSHIFT_END()
#define	SLABLIST_FWDSHIFT_END_ENABLED() (0)
#define	SLABLIST_GET_POS_BASE_WALK(arg0)
#define	SLABLIST_GET_POS_BASE_WALK_ENABLED() (0)
#define	SLABLIST_GET_POS_BEGIN(arg0, arg1)
#define	SLABLIST_GET_POS_BEGIN_ENABLED() (0)
#define	SLABLIST_GET_POS_END(arg0)
#define	SLABLIST_GET_POS_END_ENABLED() (0)
#define	SLABLIST_GET_POS_SHALLOW()
#define	SLABLIST_GET_POS_SHALLOW_ENABLED() (0)
#define	SLABLIST_GET_POS_SUB_WALK(arg0)
#define	SLABLIST_GET_POS_SUB_WALK_ENABLED() (0)
#define	SLABLIST_GET_POS_TOP_WALK(arg0)
#define	SLABLIST_GET_POS_TOP_WALK_ENABLED() (0)
#define	SLABLIST_GOT_HERE(arg0)
#define	SLABLIST_GOT_HERE_ENABLED() (0)
#define	SLABLIST_LINEAR_SCAN(arg0, arg1)
#define	SLABLIST_LINEAR_SCAN_ENABLED() (0)
#define	SLABLIST_LINEAR_SCAN_BEGIN(arg0)
#define	SLABLIST_LINEAR_SCAN_BEGIN_ENABLED() (0)
#define	SLABLIST_LINEAR_SCAN_END(arg0)
#define	SLABLIST_LINEAR_SCAN_END_ENABLED() (0)
#define	SLABLIST_LINK_SLAB_AFTER(arg0, arg1, arg2)
#define	SLABLIST_LINK_SLAB_AFTER_ENABLED() (0)
#define	SLABLIST_LINK_SLAB_BEFORE(arg0, arg1, arg2)
#define	SLABLIST_LINK_SLAB_BEFORE_ENABLED() (0)
#define	SLABLIST_LINK_SML_NODE(arg0)
#define	SLABLIST_LINK_SML_NODE_ENABLED() (0)
#define	SLABLIST_LINK_SUBSLAB_AFTER(arg0, arg1, arg2)
#define	SLABLIST_LINK_SUBSLAB_AFTER_ENABLED() (0)
#define	SLABLIST_LINK_SUBSLAB_BEFORE(arg0, arg1, arg2)
#define	SLABLIST_LINK_SUBSLAB_BEFORE_ENABLED() (0)
#define	SLABLIST_MAP_BEGIN(arg0)
#define	SLABLIST_MAP_BEGIN_ENABLED() (0)
#define	SLABLIST_MAP_END(arg0)
#define	SLABLIST_MAP_END_ENABLED() (0)
#define	SLABLIST_REAP_BEGIN(arg0)
#define	SLABLIST_REAP_BEGIN_ENABLED() (0)
#define	SLABLIST_REAP_END(arg0)
#define	SLABLIST_REAP_END_ENABLED() (0)
#define	SLABLIST_REM_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_REM_BEGIN_ENABLED() (0)
#define	SLABLIST_REM_END(arg0)
#define	SLABLIST_REM_END_ENABLED() (0)
#define	SLABLIST_REM_RANGE_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_REM_RANGE_BEGIN_ENABLED() (0)
#define	SLABLIST_REM_RANGE_END(arg0)
#define	SLABLIST_REM_RANGE_END_ENABLED() (0)
#define	SLABLIST_RIPPLE_ADD_SLAB(arg0, arg1, arg2)
#define	SLABLIST_RIPPLE_ADD_SLAB_ENABLED() (0)
#define	SLABLIST_RIPPLE_ADD_SUBSLAB(arg0, arg1, arg2)
#define	SLABLIST_RIPPLE_ADD_SUBSLAB_ENABLED() (0)
#define	SLABLIST_RIPPLE_REM_SLAB(arg0, arg1, arg2)
#define	SLABLIST_RIPPLE_REM_SLAB_ENABLED() (0)
#define	SLABLIST_RIPPLE_REM_SUBSLAB(arg0, arg1, arg2)
#define	SLABLIST_RIPPLE_REM_SUBSLAB_ENABLED() (0)
#define	SLABLIST_SET_CRUMB(arg0, arg1, arg2)
#define	SLABLIST_SET_CRUMB_ENABLED() (0)
#define	SLABLIST_SET_END(arg0, arg1)
#define	SLABLIST_SET_END_ENABLED() (0)
#define	SLABLIST_SET_HEAD(arg0, arg1)
#define	SLABLIST_SET_HEAD_ENABLED() (0)
#define	SLABLIST_SET_USR_ELEMS(arg0)
#define	SLABLIST_SET_USR_ELEMS_ENABLED() (0)
#define	SLABLIST_SL_DEC_ELEMS(arg0)
#define	SLABLIST_SL_DEC_ELEMS_ENABLED() (0)
#define	SLABLIST_SL_DEC_SLABS(arg0)
#define	SLABLIST_SL_DEC_SLABS_ENABLED() (0)
#define	SLABLIST_SL_DEC_SUBSLABS(arg0)
#define	SLABLIST_SL_DEC_SUBSLABS_ENABLED() (0)
#define	SLABLIST_SL_INC_ELEMS(arg0)
#define	SLABLIST_SL_INC_ELEMS_ENABLED() (0)
#define	SLABLIST_SL_INC_LAYER(arg0)
#define	SLABLIST_SL_INC_LAYER_ENABLED() (0)
#define	SLABLIST_SL_INC_SLABS(arg0)
#define	SLABLIST_SL_INC_SLABS_ENABLED() (0)
#define	SLABLIST_SL_INC_SUBLAYERS(arg0)
#define	SLABLIST_SL_INC_SUBLAYERS_ENABLED() (0)
#define	SLABLIST_SL_INC_SUBSLABS(arg0)
#define	SLABLIST_SL_INC_SUBSLABS_ENABLED() (0)
#define	SLABLIST_SLAB_AA(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AA_ENABLED() (0)
#define	SLABLIST_SLAB_AAM(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AAM_ENABLED() (0)
#define	SLABLIST_SLAB_AB(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AB_ENABLED() (0)
#define	SLABLIST_SLAB_ABM(arg0, arg1, arg2)
#define	SLABLIST_SLAB_ABM_ENABLED() (0)
#define	SLABLIST_SLAB_AI(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AI_ENABLED() (0)
#define	SLABLIST_SLAB_AISN(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AISN_ENABLED() (0)
#define	SLABLIST_SLAB_AISNM(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AISNM_ENABLED() (0)
#define	SLABLIST_SLAB_AISP(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AISP_ENABLED() (0)
#define	SLABLIST_SLAB_AISPM(arg0, arg1, arg2)
#define	SLABLIST_SLAB_AISPM_ENABLED() (0)
#define	SLABLIST_SLAB_AR(arg0, arg1, arg2, arg3)
#define	SLABLIST_SLAB_AR_ENABLED() (0)
#define	SLABLIST_SLAB_BIN_SRCH(arg0, arg1)
#define	SLABLIST_SLAB_BIN_SRCH_ENABLED() (0)
#define	SLABLIST_SLAB_DEC_ELEMS(arg0)
#define	SLABLIST_SLAB_DEC_ELEMS_ENABLED() (0)
#define	SLABLIST_SLAB_INC_ELEMS(arg0)
#define	SLABLIST_SLAB_INC_ELEMS_ENABLED() (0)
#define	SLABLIST_SLAB_MK(arg0)
#define	SLABLIST_SLAB_MK_ENABLED() (0)
#define	SLABLIST_SLAB_MOVE_MID_TO_NEXT(arg0, arg1, arg2)
#define	SLABLIST_SLAB_MOVE_MID_TO_NEXT_ENABLED() (0)
#define	SLABLIST_SLAB_MOVE_MID_TO_PREV(arg0, arg1, arg2)
#define	SLABLIST_SLAB_MOVE_MID_TO_PREV_ENABLED() (0)
#define	SLABLIST_SLAB_MOVE_NEXT_TO_MID(arg0, arg1, arg2)
#define	SLABLIST_SLAB_MOVE_NEXT_TO_MID_ENABLED() (0)
#define	SLABLIST_SLAB_MOVE_PREV_TO_MID(arg0, arg1, arg2)
#define	SLABLIST_SLAB_MOVE_PREV_TO_MID_ENABLED() (0)
#define	SLABLIST_SLAB_RM(arg0)
#define	SLABLIST_SLAB_RM_ENABLED() (0)
#define	SLABLIST_SLAB_SET_BELOW(arg0)
#define	SLABLIST_SLAB_SET_BELOW_ENABLED() (0)
#define	SLABLIST_SLAB_SET_MAX(arg0)
#define	SLABLIST_SLAB_SET_MAX_ENABLED() (0)
#define	SLABLIST_SLAB_SET_MIN(arg0)
#define	SLABLIST_SLAB_SET_MIN_ENABLED() (0)
#define	SLABLIST_SUB_LINEAR_SCAN(arg0, arg1)
#define	SLABLIST_SUB_LINEAR_SCAN_ENABLED() (0)
#define	SLABLIST_SUB_LINEAR_SCAN_BEGIN(arg0)
#define	SLABLIST_SUB_LINEAR_SCAN_BEGIN_ENABLED() (0)
#define	SLABLIST_SUB_LINEAR_SCAN_END(arg0)
#define	SLABLIST_SUB_LINEAR_SCAN_END_ENABLED() (0)
#define	SLABLIST_SUBBWDSHIFT_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_SUBBWDSHIFT_BEGIN_ENABLED() (0)
#define	SLABLIST_SUBBWDSHIFT_END()
#define	SLABLIST_SUBBWDSHIFT_END_ENABLED() (0)
#define	SLABLIST_SUBFWDSHIFT_BEGIN(arg0, arg1, arg2)
#define	SLABLIST_SUBFWDSHIFT_BEGIN_ENABLED() (0)
#define	SLABLIST_SUBFWDSHIFT_END()
#define	SLABLIST_SUBFWDSHIFT_END_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AA(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AA_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AAM(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AAM_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AB(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AB_ENABLED() (0)
#define	SLABLIST_SUBSLAB_ABM(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_ABM_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AI(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AI_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AISN(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AISN_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AISNM(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AISNM_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AISP(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AISP_ENABLED() (0)
#define	SLABLIST_SUBSLAB_AISPM(arg0, arg1, arg2, arg3)
#define	SLABLIST_SUBSLAB_AISPM_ENABLED() (0)
#define	SLABLIST_SUBSLAB_BIN_SRCH(arg0, arg1)
#define	SLABLIST_SUBSLAB_BIN_SRCH_ENABLED() (0)
#define	SLABLIST_SUBSLAB_BIN_SRCH_TOP(arg0, arg1)
#define	SLABLIST_SUBSLAB_BIN_SRCH_TOP_ENABLED() (0)
#define	SLABLIST_SUBSLAB_DEC_ELEMS(arg0)
#define	SLABLIST_SUBSLAB_DEC_ELEMS_ENABLED() (0)
#define	SLABLIST_SUBSLAB_INC_ELEMS(arg0)
#define	SLABLIST_SUBSLAB_INC_ELEMS_ENABLED() (0)
#define	SLABLIST_SUBSLAB_MK(arg0)
#define	SLABLIST_SUBSLAB_MK_ENABLED() (0)
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_NEXT(arg0, arg1, arg2)
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_NEXT_ENABLED() (0)
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_PREV(arg0, arg1, arg2)
#define	SLABLIST_SUBSLAB_MOVE_MID_TO_PREV_ENABLED() (0)
#define	SLABLIST_SUBSLAB_MOVE_NEXT_TO_MID(arg0, arg1, arg2)
#define	SLABLIST_SUBSLAB_MOVE_NEXT_TO_MID_ENABLED() (0)
#define	SLABLIST_SUBSLAB_MOVE_PREV_TO_MID(arg0, arg1, arg2)
#define	SLABLIST_SUBSLAB_MOVE_PREV_TO_MID_ENABLED() (0)
#define	SLABLIST_SUBSLAB_RM(arg0)
#define	SLABLIST_SUBSLAB_RM_ENABLED() (0)
#define	SLABLIST_SUBSLAB_SET_BELOW(arg0)
#define	SLABLIST_SUBSLAB_SET_BELOW_ENABLED() (0)
#define	SLABLIST_SUBSLAB_SET_MAX(arg0)
#define	SLABLIST_SUBSLAB_SET_MAX_ENABLED() (0)
#define	SLABLIST_SUBSLAB_SET_MIN(arg0)
#define	SLABLIST_SUBSLAB_SET_MIN_ENABLED() (0)
#define	SLABLIST_SUM_USR_ELEMS(arg0)
#define	SLABLIST_SUM_USR_ELEMS_ENABLED() (0)
#define	SLABLIST_TEST_ADD_ELEM(arg0, arg1, arg2, arg3)
#define	SLABLIST_TEST_ADD_ELEM_ENABLED() (0)
#define	SLABLIST_TEST_ADD_SLAB(arg0, arg1, arg2, arg3, arg4)
#define	SLABLIST_TEST_ADD_SLAB_ENABLED() (0)
#define	SLABLIST_TEST_BREAD_CRUMBS(arg0, arg1)
#define	SLABLIST_TEST_BREAD_CRUMBS_ENABLED() (0)
#define	SLABLIST_TEST_FIND_BUBBLE_UP(arg0, arg1, arg2, arg3, arg4)
#define	SLABLIST_TEST_FIND_BUBBLE_UP_ENABLED() (0)
#define	SLABLIST_TEST_GET_ELEM_POS(arg0, arg1, arg2, arg3, arg4)
#define	SLABLIST_TEST_GET_ELEM_POS_ENABLED() (0)
#define	SLABLIST_TEST_IS_SLAB_LIST(arg0)
#define	SLABLIST_TEST_IS_SLAB_LIST_ENABLED() (0)
#define	SLABLIST_TEST_IS_SML_LIST(arg0)
#define	SLABLIST_TEST_IS_SML_LIST_ENABLED() (0)
#define	SLABLIST_TEST_REM_RANGE(arg0, arg1, arg2)
#define	SLABLIST_TEST_REM_RANGE_ENABLED() (0)
#define	SLABLIST_TEST_REMOVE_ELEM(arg0, arg1, arg2)
#define	SLABLIST_TEST_REMOVE_ELEM_ENABLED() (0)
#define	SLABLIST_TEST_REMOVE_SLAB(arg0, arg1, arg2)
#define	SLABLIST_TEST_REMOVE_SLAB_ENABLED() (0)
#define	SLABLIST_TEST_RIPPLE_ADD_SLAB(arg0, arg1, arg2, arg3, arg4)
#define	SLABLIST_TEST_RIPPLE_ADD_SLAB_ENABLED() (0)
#define	SLABLIST_TEST_RIPPLE_ADD_SUBSLAB(arg0, arg1, arg2, arg3, arg4)
#define	SLABLIST_TEST_RIPPLE_ADD_SUBSLAB_ENABLED() (0)
#define	SLABLIST_TEST_RIPPLE_UPDATE_EXTREMA(arg0, arg1)
#define	SLABLIST_TEST_RIPPLE_UPDATE_EXTREMA_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_BIN_SRCH(arg0, arg1, arg2)
#define	SLABLIST_TEST_SLAB_BIN_SRCH_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_MOVE_NEXT(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_TEST_SLAB_MOVE_NEXT_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_MOVE_PREV(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_TEST_SLAB_MOVE_PREV_ENABLED() (0)
#define	SLABLIST_TEST_SLAB_TO_SML(arg0)
#define	SLABLIST_TEST_SLAB_TO_SML_ENABLED() (0)
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED(arg0)
#define	SLABLIST_TEST_SMLIST_ELEMS_SORTED_ENABLED() (0)
#define	SLABLIST_TEST_SMLIST_NELEMS(arg0)
#define	SLABLIST_TEST_SMLIST_NELEMS_ENABLED() (0)
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH(arg0, arg1, arg2)
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_ENABLED() (0)
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_TOP(arg0, arg1, arg2)
#define	SLABLIST_TEST_SUBSLAB_BIN_SRCH_TOP_ENABLED() (0)
#define	SLABLIST_TEST_SUBSLAB_MOVE_NEXT(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_TEST_SUBSLAB_MOVE_NEXT_ENABLED() (0)
#define	SLABLIST_TEST_SUBSLAB_MOVE_PREV(arg0, arg1, arg2, arg3, arg4, arg5)
#define	SLABLIST_TEST_SUBSLAB_MOVE_PREV_ENABLED() (0)
#define	SLABLIST_TO_SLAB(arg0)
#define	SLABLIST_TO_SLAB_ENABLED() (0)
#define	SLABLIST_TO_SMALL_LIST(arg0)
#define	SLABLIST_TO_SMALL_LIST_ENABLED() (0)
#define	SLABLIST_UNLINK_SLAB(arg0, arg1)
#define	SLABLIST_UNLINK_SLAB_ENABLED() (0)
#define	SLABLIST_UNLINK_SML_NODE(arg0)
#define	SLABLIST_UNLINK_SML_NODE_ENABLED() (0)
#define	SLABLIST_UNLINK_SUBSLAB(arg0, arg1)
#define	SLABLIST_UNLINK_SUBSLAB_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _SLABLIST_PROVIDER_H */
