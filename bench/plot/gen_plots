#!/bin/ksh
# arg1  = machine-number 0 .. N, N = 1

source ../main/impls
source ../main/input_sizes
source ../main/machines

pbm_base[0]=heap_growth_vs_time_
pbm_base[1]=elements_rate_vs_time_
pbm_base[2]=elements_vs_time_

in_pa[0]=rand
in_pa[1]=seqinc

scale[0]=log
scale[1]=lin

data_type[0]=intsrt
data_type[1]=intord
data_type[2]=strord
data_type[3]=strsrt


#input[0]=heap_growth
input[1]=throughput_post
#input[2]=throughput
input[3]=throughput_plus_heap

#output files' filenames are formatted like so:
#
# machine-name_implementation_measurement_data-type_input-pattern_input-size.extension

base_impl=0;

for w in 0 1 2 3 4 5 6 7 8 9 10 11 12 13; do #impl
	for s in 0 ; do  #data type
	for x in 1 3; do #input
		for y in 0 1 2 3 4; do #size
			for z in 0 1 ; do #pattern
				M=${impl[$w]}
				Mnm=${machine[$1]}
				echo SWAG 
				echo $M
				echo name is $Mnm
				N=${input[$x]}
				Z=${in_sz[$y]}
				P=${in_pa[$z]}
				D=${data_type[$s]}
				#INF="../$M/"$Mnm"_"$N"_"$D"_"$P"_"$y"_"$Z
				INF="../$M/"$Mnm"_"$N"_"$D"_"$P"_"$Z
				TRI_E=$Mnm"_"$M"_""throughput""_"$D"_"$P"_"$y"_"$Z
				TRI_H=$Mnm"_"$M"_""heap_growth""_"$D"_"$P"_"$y"_"$Z
				BI_ER=$Mnm"_"$M"_""throughput_post""_"$D"_"$P"_"$y"_"$Z
				BL="../${impl[$base_impl]}/"$Mnm"_"$N"_"$D"_"$P"_"$Z

				if [[ x -eq 3 &&  -f $INF ]]; then

					echo $TRI_E
					echo $TRI_H
					echo "$BL v. $INF"
					gnuplot -e "inputfile1='$BL'" \
						-e "inputfile2='$INF'" \
						-e "elems_v_time_out='$TRI_E.pbm'" \
						-e "heap_v_time_out='$TRI_H.pbm'" \
						 plotscript_tri_pair
					pnmtops -height 2.8 -width 3.7 $TRI_E.pbm \
						> $TRI_E.eps;
					pnmtops -height 2.8 -width 3.7 $TRI_H.pbm \
						> $TRI_H.eps;
					pnmtojpeg $TRI_E.pbm \
						> $TRI_E.jpeg
					pnmtojpeg $TRI_H.pbm \
						> $TRI_H.jpeg
					chmod a+rw $TRI_E.pbm
					chmod a+rw $TRI_H.pbm
					./gen_tex $TRI_E throughput $D $P $Z $M $y ${impl[$base_impl]}
					./gen_tex $TRI_H heap_growth $D $P $Z $M $y ${impl[$base_impl]}
				fi;

				if [[ x -eq 1  && -f  $INF ]]; then
					echo $BI_ER
					echo "$BL v. $INF"
					gnuplot -e "inputfile1='$BL'" \
						-e "inputfile2='$INF'" \
						-e "outputfile='$BI_ER.pbm'"  plotscript_big_pair
					pnmtops -height 2.8 -width 3.7 $BI_ER.pbm \
						> $BI_ER.eps;
					pnmtojpeg $BI_ER.pbm \
						> $BI_ER.jpeg
					chmod a+rw $BI_ER.pbm
					chmod a+rw $BI_ER.eps
					chmod a+rw $BI_ER.jpeg
					./gen_tex $BI_ER throughput_post $D $P $Z $M $y ${impl[$base_impl]}
				fi;

			done
		done
	done
	done
done


#gnuplot plotscript_small;
#gnuplot plotscript_big_rand;
#gnuplot plotscript_big_seq;


for i in 0 1; do #input pattern
	for j in 0 1; do #scale
		for k in 0 1 2; do #base
			for l in 1; do #size
				b=${pbm_base[$k]}
				p=${in_pa[$i]}
				z=${in_sz[$l]}
				s=${scale[$j]}
				#pnmtops -height 2.8 -width 3.7 $b$p$z$s".pbm" \
				#pnmtops -height 1.512 -width 2 $b$p$z$s".pbm" \
				#	> $b$p$z$s".ps";
				#pnmtojpeg $b$p$z$s".pbm" \
				#	> $b$p$z$s".jpeg";
			done
		done
	done
done
